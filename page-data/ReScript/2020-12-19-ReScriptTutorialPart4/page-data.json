{"componentChunkName":"component---src-templates-blog-post-js","path":"/ReScript/2020-12-19-ReScriptTutorialPart4","result":{"data":{"site":{"siteMetadata":{"title":"Minsu's Dev Log","author":"Minsu Kim","siteUrl":"https://alstn2468.github.io","comment":{"disqusShortName":"","utterances":"alstn2468/alstn2468.github.io"},"sponsor":{"buyMeACoffeeId":"eMLdEwU"}}},"markdownRemark":{"id":"98fa4003-586b-5e37-b957-3e685aef6176","excerpt":"본 포스트는 ReScript 공식문서를 스터디하며 정리한 포스트 입니다.\n포스트를 작성하며 작성한 코드는 여기에서 확인할 수 있습니다. ReScript의 Primitive Type ReScript는 string, int, float과 같은 친숙한 원시 타입을 제공한다. ReScript의 원시 타입은 아래와 같다. String Char Regular Expression Boolean Integers Floats Unit String ReScript…","html":"<p>본 포스트는 <a href=\"https://rescript-lang.org/docs/latest/\">ReScript 공식문서</a>를 스터디하며 정리한 포스트 입니다.<br/>\n포스트를 작성하며 작성한 코드는 <a href=\"https://github.com/alstn2468/ReScript_Tutorial\">여기</a>에서 확인할 수 있습니다.</p>\n<h2 id=\"rescript의-primitive-type\" style=\"position:relative;\"><a href=\"#rescript%EC%9D%98-primitive-type\" aria-label=\"rescript의 primitive type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ReScript의 Primitive Type</h2>\n<p>ReScript는 string, int, float과 같은 친숙한 원시 타입을 제공한다. ReScript의 원시 타입은 아래와 같다.</p>\n<ul>\n<li>String</li>\n<li>Char</li>\n<li>Regular Expression</li>\n<li>Boolean</li>\n<li>Integers</li>\n<li>Floats</li>\n<li>Unit</li>\n</ul>\n<h2 id=\"string\" style=\"position:relative;\"><a href=\"#string\" aria-label=\"string permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>String</h2>\n<p>ReScript의 <code class=\"language-text\">string</code> 타입은 큰따옴표(“)를 구분자로 사용한다. 따옴표(‘)는 아래에 있는 <code class=\"language-text\">char</code>타입의 구분자로 사용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"reason\"><pre class=\"language-reason\"><code class=\"language-reason\"><span class=\"token keyword\">let</span> gretting <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello world!\"</span>\n<span class=\"token keyword\">let</span> multilineGreeting <span class=\"token operator\">=</span> \"<span class=\"token constructor\">Hello</span>\n world<span class=\"token operator\">!</span>\"</code></pre></div>\n<p>문자열을 합치기 위해서는 <code class=\"language-text\">++</code> 연산자를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"reason\"><pre class=\"language-reason\"><code class=\"language-reason\"><span class=\"token keyword\">let</span> gretting <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello \"</span> <span class=\"token operator\">+</span><span class=\"token operator\">+</span> <span class=\"token string\">\"world!\"</span></code></pre></div>\n<h3 id=\"string-interpolation\" style=\"position:relative;\"><a href=\"#string-interpolation\" aria-label=\"string interpolation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>String Interpolation</h3>\n<p>아래와 같이 문자열에만 허용되는 특별한 문법이 있다.</p>\n<ul>\n<li>여러줄의 문자열</li>\n<li>필요하지 않은 특수 문자 이스케이핑</li>\n<li>보간법 (Interpolation)</li>\n<li>적절한 유니코드 처리</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"reason\"><pre class=\"language-reason\"><code class=\"language-reason\"><span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"Joe\"</span>\n\n<span class=\"token keyword\">let</span> greeting <span class=\"token operator\">=</span> <span class=\"token operator\">`</span><span class=\"token constructor\">Hello</span>\n<span class=\"token constructor\">World</span>\n👋\n$<span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">`</span></code></pre></div>\n<p>특수 문자를 이스케이핑할 필요가 없는 경우를 제외하고 JavaScript의 <code class=\"language-text\">`</code>를 사용하는 문자열 보간법과 동일하다.</p>\n<p>보간법을 사용할 때 바인딩된 값(위의 예제에서 <code class=\"language-text\">name</code>)이 문자열이 아닐 경우 문자열로 변환해야한다. 보간법을 사용할 때 바인딩을 문자열로 암시적으로 변환하려면 <code class=\"language-text\">j</code>를 앞에 추가하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"reason\"><pre class=\"language-reason\"><code class=\"language-reason\"><span class=\"token keyword\">let</span> age <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">let</span> message <span class=\"token operator\">=</span> j<span class=\"token operator\">`</span><span class=\"token constructor\">Today</span> <span class=\"token constructor\">I</span> am $age years old<span class=\"token punctuation\">.</span><span class=\"token operator\">`</span></code></pre></div>\n<h3 id=\"사용법\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용법</h3>\n<p><a href=\"https://rescript-lang.org/docs/manual/latest/api/js/string\">API 문서</a>에서 비슷한 <code class=\"language-text\">Js.String</code> API를 참조하면된다. ReScript의 문자열은 JavaScript 문자열에 매핑되므로 두 표준 라이브러리에서 문자열을 사용하는 작업을 섞거나 및 일치시킬 수 있다.</p>\n<h3 id=\"팁--트릭\" style=\"position:relative;\"><a href=\"#%ED%8C%81--%ED%8A%B8%EB%A6%AD\" aria-label=\"팁  트릭 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>팁 &#x26; 트릭</h3>\n<p>ReScrpt는 좋은 타입시스템이 존재한다. 타입이 지정되지 않은 언어에서 문자열을 아래와 같이 사용해 문자열의 의미를 확장하는 경우가 많다.</p>\n<ul>\n<li>고유한 ID : <code class=\"language-text\">var BLUE_COLOR = \"blue\"</code></li>\n<li>데이터 구조에 대한 식별자 : <code class=\"language-text\">var BLUE = \"blue\" var RED = \"red\" var colors = [BLUE, RED]</code></li>\n<li>객체 필드의 이름 : <code class=\"language-text\">person[\"age\"] = 24</code></li>\n<li>열거형 : <code class=\"language-text\">if (audio.canPlayType() === 'probably') { ... }</code></li>\n<li>ReScript에 익숙해지면 또 다른 끔찍한 패턴을 찾을 수 있을 것이다.</li>\n</ul>\n<p>부족한 문자열 타입에 과부하가 생길수록 타입 시스템이 도움을 줄 수 있다. ReScrpt는 위의 예시에 대하여 간결하고 빠르며 유지 가능한 타입 및 데이터 구조를 제공한다. (예: 나중에 나올 <a href=\"https://rescript-lang.org/docs/manual/latest/variant\">Variant</a> 섹션)</p>\n<h2 id=\"char\" style=\"position:relative;\"><a href=\"#char\" aria-label=\"char permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Char</h2>\n<p>ReScript는 하나의 문자만 가지고 있는 문자열 타입을 가지고 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"reason\"><pre class=\"language-reason\"><code class=\"language-reason\"><span class=\"token keyword\">let</span> firstLetterOfAlphabet <span class=\"token operator\">=</span> <span class=\"token char\">'a'</span></code></pre></div>\n<p>참고 : <code class=\"language-text\">Char</code>타입은 유니코드 또는 UTF-8을 지원하지 않으므로 권장되지 않는다.</p>\n<p><code class=\"language-text\">String</code>을 <code class=\"language-text\">Char</code>로 변환하려면 <code class=\"language-text\">\"a\". [0]</code>와 같이 사용하면 된다.  반대로 <code class=\"language-text\">Char</code>를 <code class=\"language-text\">String</code>으로 변환하려면 <code class=\"language-text\">String.make (1, 'a')</code>와 같이 사용하면 된다.</p>\n<h2 id=\"regular-expression\" style=\"position:relative;\"><a href=\"#regular-expression\" aria-label=\"regular expression permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Regular Expression</h2>\n<p>ReScript 정규표현식은 JavaScript에 대응되도록 깔끔하게 컴파일된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"reason\"><pre class=\"language-reason\"><code class=\"language-reason\"><span class=\"token keyword\">let</span> r <span class=\"token operator\">=</span> %re<span class=\"token punctuation\">(</span><span class=\"token string\">\"/b/g\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위와 같은 정규표현식에는 <code class=\"language-text\">Js.Re.t</code> 타입이 있다. <a href=\"https://rescript-lang.org/docs/manual/latest/api/js/re\">Js.Re</a> 모듈에는 JavaScript에서 보았던 정규표현식 헬퍼가 포함되어 있다.</p>\n<h2 id=\"boolean\" style=\"position:relative;\"><a href=\"#boolean\" aria-label=\"boolean permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Boolean</h2>\n<p>ReScript의 <code class=\"language-text\">boolean</code>은 <code class=\"language-text\">bool</code>타입을 가지며 <code class=\"language-text\">true</code> 또는 <code class=\"language-text\">false</code>일 수 있다. 지원되는 일반적인 연산자는 아래와 같다.</p>\n<ul>\n<li><code class=\"language-text\">&amp;&amp;</code> : AND 연산자</li>\n<li><code class=\"language-text\">||</code> : OR 연산자</li>\n<li><code class=\"language-text\">!</code> : NOT 연산자</li>\n<li><code class=\"language-text\">&lt;=</code>, <code class=\"language-text\">>=</code>, <code class=\"language-text\">&lt;</code>, <code class=\"language-text\">></code></li>\n<li><code class=\"language-text\">==</code> : 구조가 같음을 판단하는 연산자, 데이터의 구조를 자세히 비교한다. <code class=\"language-text\">(1, 2) == (1, 2)</code>는 참이다. 편하지만 유의해서 사용해야 한다.</li>\n<li><code class=\"language-text\">===</code> : 참조가 동일한지 판단하는 연산자, 얕은 비교를 한다. <code class=\"language-text\">(1, 2) === (1, 2)</code>는 거짓이고 <code class=\"language-text\">let myTuple = (1, 2); myTuple === myTuple</code>은 참이다.</li>\n<li><code class=\"language-text\">!=</code> : 구조가 다름을 판단하는 연산자</li>\n<li><code class=\"language-text\">!==</code> : 참조가 다름을 판단하는 연산자</li>\n</ul>\n<p>ReScript의 <code class=\"language-text\">true</code>/<code class=\"language-text\">false</code>는 JavaScript의 <code class=\"language-text\">true</code>/<code class=\"language-text\">false</code>로 컴파일 된다.</p>\n<h2 id=\"integers\" style=\"position:relative;\"><a href=\"#integers\" aria-label=\"integers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Integers</h2>\n<p>32비트이며 필요한 경우 잘린다. <code class=\"language-text\">+</code>, <code class=\"language-text\">-</code>, <code class=\"language-text\">*</code>, <code class=\"language-text\">/</code>등 일반적인 연산자를 제공한다. 헬퍼 함수들은 <a href=\"https://rescript-lang.org/docs/manual/latest/api/js/int\">Js.Int</a>를 참조하면 된다.</p>\n<p><strong>JavaScript의 <code class=\"language-text\">number</code>에 바인딩 할 때 주의해야한다.</strong> 숫자가 긴 경우에는 잘릴 수 있다. 이 경우 JavaScript의 <code class=\"language-text\">number</code>(특히 <code class=\"language-text\">Dates</code>)를 <code class=\"language-text\">float</code>로 대신 바인딩할 수 있다.</p>\n<h2 id=\"floats\" style=\"position:relative;\"><a href=\"#floats\" aria-label=\"floats permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Floats</h2>\n<p><code class=\"language-text\">Floats</code>타입은 <code class=\"language-text\">Integers</code>와 다른 연산자를 요구한다. <code class=\"language-text\">+.</code>, <code class=\"language-text\">-.</code>, <code class=\"language-text\">*.</code>, <code class=\"language-text\">/.</code> 등이 존재하며 <code class=\"language-text\">0.5 +. 0.6</code>과 같이 사용한다. 헬퍼 함수들은 <a href=\"https://rescript-lang.org/docs/manual/latest/api/js/float\">Js.Float</a>를 참조하면 된다.</p>\n<h2 id=\"unit\" style=\"position:relative;\"><a href=\"#unit\" aria-label=\"unit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unit</h2>\n<p><code class=\"language-text\">Unit</code>타입에는 JavaScript의 <code class=\"language-text\">undefined</code>로 컴파일되는 단일 값 <code class=\"language-text\">()</code>가 존재한다. 다양한 위치에서 플레이스홀더로 사용되는 더미 타입이다. 실제로 이 타입을 보기 전까지는 필요하지 않을 것이다.</p>","frontmatter":{"title":"ReScript 공식문서로 ReScript 훑어보기 (4)","date":"December 19, 2020","thumbnail":null}}},"pageContext":{"slug":"/ReScript/2020-12-19-ReScriptTutorialPart4/","previous":{"fields":{"slug":"/ReScript/2020-12-17-ReScriptTutorialPart3/"},"frontmatter":{"title":"ReScript 공식문서로 ReScript 훑어보기 (3)","category":"ReScript","draft":false}},"next":{"fields":{"slug":"/ReScript/2020-12-20-ReScriptTutorialPart5/"},"frontmatter":{"title":"ReScript 공식문서로 ReScript 훑어보기 (5)","category":"ReScript","draft":false}}}},"staticQueryHashes":["3001444076","3128451518"]}