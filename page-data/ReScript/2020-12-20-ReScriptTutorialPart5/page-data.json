{"componentChunkName":"component---src-templates-blog-post-js","path":"/ReScript/2020-12-20-ReScriptTutorialPart5","result":{"data":{"site":{"siteMetadata":{"title":"Minsu's Dev Log","author":"Minsu Kim","siteUrl":"https://alstn2468.github.io","comment":{"disqusShortName":"","utterances":"alstn2468/alstn2468.github.io"},"sponsor":{"buyMeACoffeeId":"eMLdEwU"}}},"markdownRemark":{"id":"eb59edbe-d846-53d8-83c6-7d72509e1d5a","excerpt":"본 포스트는 ReScript 공식문서를 스터디하며 정리한 포스트 입니다.\n포스트를 작성하며 작성한 코드는 여기에서 확인할 수 있습니다. Tuple Tuple은 JavaScript에는 없는 ReScrpt 전용 데이터 구조다. Tuple은 아래와 같은 특성이 존재한다. 불변함 (Immutable) 순서가 존재함 (Ordered) 생성될 때 고정된 크기를 갖음 (Fix-sized at creation time) 불균일함 (Heterogeneous, 다른 타입의 값을 가질 수 있음) Tuple…","html":"<p>본 포스트는 <a href=\"https://rescript-lang.org/docs/latest/\">ReScript 공식문서</a>를 스터디하며 정리한 포스트 입니다.<br/>\n포스트를 작성하며 작성한 코드는 <a href=\"https://github.com/alstn2468/ReScript_Tutorial\">여기</a>에서 확인할 수 있습니다.</p>\n<h2 id=\"tuple\" style=\"position:relative;\"><a href=\"#tuple\" aria-label=\"tuple permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tuple</h2>\n<p>Tuple은 JavaScript에는 없는 ReScrpt 전용 데이터 구조다. Tuple은 아래와 같은 특성이 존재한다.</p>\n<ul>\n<li>불변함 (Immutable)</li>\n<li>순서가 존재함 (Ordered)</li>\n<li>생성될 때 고정된 크기를 갖음 (Fix-sized at creation time)</li>\n<li>불균일함 (Heterogeneous, 다른 타입의 값을 가질 수 있음)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"reason\"><pre class=\"language-reason\"><code class=\"language-reason\"><span class=\"token keyword\">let</span> ageAndName <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lil' ReScript\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> my3dCoordinates <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">20.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100.0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Tuple타입은 타입 주석 또한 사용할 수 있다. Tuple타입은 시각적으로 Tuple의 값과 비슷하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"reason\"><pre class=\"language-reason\"><code class=\"language-reason\"><span class=\"token keyword\">let</span> ageAndName<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>int<span class=\"token punctuation\">,</span> string<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lil' ReScript\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// a tuple type alias</span>\n<span class=\"token keyword\">type</span> coord3d <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>float<span class=\"token punctuation\">,</span> float<span class=\"token punctuation\">,</span> float<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> my3dCoordinates<span class=\"token punctuation\">:</span> coord3d <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">20.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100.0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>참고 : 크기가 1인 튜플은 존재하지 않는다. 크기가 1일 경우 값 자체를 사용하는 것이다.</p>\n<h3 id=\"사용법\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용법</h3>\n<p>Tuple의 특정 맴버를 얻으료면 Tuple을 비구조화 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"reason\"><pre class=\"language-reason\"><code class=\"language-reason\"><span class=\"token keyword\">let</span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> my3dCoordinates <span class=\"token comment\">// y를 얻을 수 있다.</span></code></pre></div>\n<p><code class=\"language-text\">_</code>는 Tuple의 표시된 맴버들을 무시하고 있음을 의미한다.</p>\n<p>Tuple은 변경과 같은 업데이트를 할 수 없다. 이전 항목들을 비구조화하여 새로운 Tuple을 생성해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"reason\"><pre class=\"language-reason\"><code class=\"language-reason\"><span class=\"token keyword\">let</span> coordinates1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">(</span>c1x<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> coordinates1\n<span class=\"token keyword\">let</span> coordinates2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>c1x <span class=\"token operator\">+</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"팁--트릭\" style=\"position:relative;\"><a href=\"#%ED%8C%81--%ED%8A%B8%EB%A6%AD\" aria-label=\"팁  트릭 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>팁 &#x26; 트릭</h3>\n<p>많은 과정 없이 여러개의 값을 전달하는 편리한 상황에서 튜플을 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"reason\"><pre class=\"language-reason\"><code class=\"language-reason\"><span class=\"token keyword\">let</span> getCenterCoordinates <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> doSomeOperationsHere<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> doSomeMoreOperationsHere<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위와 같이 사용하게 되면 <code class=\"language-text\">getCenterCoordinates</code>는 <code class=\"language-text\">x</code>, <code class=\"language-text\">y</code> 두개의 값을 반환할 수 있다. Tuple을 사용하는 범위는 <strong>지역 범위</strong>을 유지하는 것이 좋다. 수명이 길고 자주 전달되는 데이터 구조의 경우 이름이 지정된 필드가 있는 <strong>Record</strong>를 사용하는 것이 더 선호된다.</p>","frontmatter":{"title":"ReScript 공식문서로 ReScript 훑어보기 (5)","date":"December 20, 2020","thumbnail":null}}},"pageContext":{"slug":"/ReScript/2020-12-20-ReScriptTutorialPart5/","previous":{"fields":{"slug":"/ReScript/2020-12-19-ReScriptTutorialPart4/"},"frontmatter":{"title":"ReScript 공식문서로 ReScript 훑어보기 (4)","category":"ReScript","draft":false}},"next":{"fields":{"slug":"/ReScript/2020-12-21-ReScriptTutorialPart6/"},"frontmatter":{"title":"ReScript 공식문서로 ReScript 훑어보기 (6)","category":"ReScript","draft":false}}}},"staticQueryHashes":["3001444076","3128451518"]}