{"componentChunkName":"component---src-templates-blog-post-js","path":"/ReScript/2020-12-31-ReScriptTutorialPart10","result":{"data":{"site":{"siteMetadata":{"title":"Minsu's Dev Log","author":"Minsu Kim","siteUrl":"https://alstn2468.github.io","comment":{"disqusShortName":"","utterances":"alstn2468/alstn2468.github.io"},"sponsor":{"buyMeACoffeeId":"eMLdEwU"}}},"markdownRemark":{"id":"8c494aa6-7e3f-56aa-9246-86a99547e6c7","excerpt":"본 포스트는 ReScript 공식문서를 스터디하며 정리한 포스트 입니다.\n포스트를 작성하며 작성한 코드는 여기에서 확인할 수 있습니다. Array and List Array Array는 ReScript에서 기본적으로 정렬된 자료구조다. JavaScript의 배열과 동일한 방식으로 동작한다. ReScript의 배열의 각 항목은 타입이 동일해야 한다. Array를 사용하는 방법 Array를 사용하기 위해서는 Js.Array API를 보면된다. Array…","html":"<p>본 포스트는 <a href=\"https://rescript-lang.org/docs/latest/\">ReScript 공식문서</a>를 스터디하며 정리한 포스트 입니다.<br/>\n포스트를 작성하며 작성한 코드는 <a href=\"https://github.com/alstn2468/ReScript_Tutorial\">여기</a>에서 확인할 수 있습니다.</p>\n<h2 id=\"array-and-list\" style=\"position:relative;\"><a href=\"#array-and-list\" aria-label=\"array and list permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Array and List</h2>\n<h3 id=\"array\" style=\"position:relative;\"><a href=\"#array\" aria-label=\"array permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Array</h3>\n<p>Array는 ReScript에서 기본적으로 정렬된 자료구조다. JavaScript의 배열과 동일한 방식으로 동작한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"reason\"><pre class=\"language-reason\"><code class=\"language-reason\"><span class=\"token keyword\">let</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"world\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"how are you\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>ReScript의 배열의 각 항목은 타입이 동일해야 한다.</p>\n<h4 id=\"array를-사용하는-방법\" style=\"position:relative;\"><a href=\"#array%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"array를 사용하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Array를 사용하는 방법</h4>\n<p>Array를 사용하기 위해서는 <a href=\"https://rescript-lang.org/docs/manual/latest/api/js/array\">Js.Array</a> API를 보면된다.</p>\n<p>Array의 항목에 접근하고 업데이트 하기위해서는 아래와 같이 사용하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"reason\"><pre class=\"language-reason\"><code class=\"language-reason\"><span class=\"token keyword\">let</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"world\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"how are you\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">let</span> firstItem <span class=\"token operator\">=</span> myArray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// \"hello\"</span>\nmyArray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hey\"</span> <span class=\"token comment\">// [\"hey\", \"world\", \"how are you\"]</span></code></pre></div>\n<h3 id=\"list\" style=\"position:relative;\"><a href=\"#list\" aria-label=\"list permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List</h3>\n<p>ReScript는 아래와 같은 특징을 갖는 단방향 연결리스트 또한 제공한다.</p>\n<ul>\n<li>불변하다. (Immutable)</li>\n<li>항목을 앞에 추가할 때 빠르다. (Fast at prepending items)</li>\n<li>끝을 가져올 때 빠르다. (Fast at getting the tail)</li>\n<li>다른 모든것에선 느리다. (Slow at everything else)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"reason\"><pre class=\"language-reason\"><code class=\"language-reason\"><span class=\"token keyword\">let</span> myList <span class=\"token operator\">=</span> list<span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Array와 마찬가지로 List의 항목들의 타입은 모두 같아야한다.</p>\n<h4 id=\"list를-사용하는-방법\" style=\"position:relative;\"><a href=\"#list%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"list를 사용하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List를 사용하는 방법</h4>\n<p>크기를 조절해야하는 가능성이 있을 경우 앞에 빠르게 항목을 추가하거나 빠르게 분할을 하기위해 List를 사용한다. 모든것은 불변하고 상대적으로 효율적이다.</p>\n<p>항목에 무작위로 접근하거나 앞이 아닌 위치에 항목을 삽입해야하는 경우 List를 사용하지 않는 것이 좋다. 코드가 둔화되거나 느려질 수 있다.</p>\n<p>ReScript의 표준 라이브러리는 <a href=\"https://rescript-lang.org/docs/manual/latest/api/belt/list\">List모듈</a>을 제공한다.</p>\n<h4 id=\"list에-불변하게-항목을-앞에-추가하는-방법\" style=\"position:relative;\"><a href=\"#list%EC%97%90-%EB%B6%88%EB%B3%80%ED%95%98%EA%B2%8C-%ED%95%AD%EB%AA%A9%EC%9D%84-%EC%95%9E%EC%97%90-%EC%B6%94%EA%B0%80%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"list에 불변하게 항목을 앞에 추가하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List에 불변하게 항목을 앞에 추가하는 방법</h4>\n<p>아래와 같은 전개(spread) 문법을 사용하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"reason\"><pre class=\"language-reason\"><code class=\"language-reason\"><span class=\"token keyword\">let</span> myList <span class=\"token operator\">=</span> list<span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> anotherList <span class=\"token operator\">=</span> list<span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>myList<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">myList</code>는 변경되지 않았고 <code class=\"language-text\">anotherList</code>는 <code class=\"language-text\">list{0, 1, 2, 3}</code>의 값을 갖는다. 이것은 O(1)의 시간복잡도로 효율적이다. <code class=\"language-text\">anotherList</code>의 뒤의 3개의 요소들은 <code class=\"language-text\">myList</code>와 공유된다.</p>\n<p><strong><code class=\"language-text\">list{a, ...b, ...c}</code>와 같은 문법은 오류를 발생시킨다는 것을 알아야 한다.</strong> ReScript는 List에서 여러개의 전개를 지원하지 않는다. <code class=\"language-text\">b</code>의 각 항목이 <code class=\"language-text\">c</code>의 머리에 하나씩 추가되기 때문에 우연하게 선형 연산(O(b))가 된다. 이것을 위해 <code class=\"language-text\">List.concat</code>을 사용할 수 있지만 권장되는 방법은 아니다.</p>\n<p>List의 중간에 있는 임의의 항목을 업데이트하는 것 또한 성능 및 할당 오버헤드가 선형 연산(O(n))이기 때문에 권장하지 않는다.</p>\n<h4 id=\"list의-항목에-접근하는-방법\" style=\"position:relative;\"><a href=\"#list%EC%9D%98-%ED%95%AD%EB%AA%A9%EC%97%90-%EC%A0%91%EA%B7%BC%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"list의 항목에 접근하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List의 항목에 접근하는 방법</h4>\n<p><code class=\"language-text\">switch</code> (<a href=\"https://rescript-lang.org/docs/manual/latest/pattern-matching-destructuring\">패턴 매칭 섹션</a>에서 설명)가 일반적으로 List의 항목에 접근할 때 사용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"reason\"><pre class=\"language-reason\"><code class=\"language-reason\"><span class=\"token keyword\">let</span> message <span class=\"token operator\">=</span>\n  <span class=\"token keyword\">switch</span> myList <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">|</span> list<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"This list is empty\"</span>\n  <span class=\"token operator\">|</span> list<span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest<span class=\"token punctuation\">}</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"The head of the list is the string \"</span> <span class=\"token operator\">+</span><span class=\"token operator\">+</span> <span class=\"token class-name\">Js</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">.</span>toString<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"ReScript 공식문서로 ReScript 훑어보기 (10)","date":"December 31, 2020","thumbnail":null}}},"pageContext":{"slug":"/ReScript/2020-12-31-ReScriptTutorialPart10/","previous":{"fields":{"slug":"/ReScript/2020-12-28-ReScriptTutorialPart9/"},"frontmatter":{"title":"ReScript 공식문서로 ReScript 훑어보기 (9)","category":"ReScript","draft":false}},"next":{"fields":{"slug":"/TypeScript/2021-04-21-fp-ts-0/"},"frontmatter":{"title":"fp-ts로 Typescript 함수형 프로그래밍 시작하기 0","category":"TypeScript","draft":false}}}},"staticQueryHashes":["3001444076","3128451518"]}