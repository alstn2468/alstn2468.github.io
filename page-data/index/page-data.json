{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Minsu's Dev Log","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"2020년 10월에 작성한 “개발자로서 첫 이직 회고” 이후 2년이 지난 시점이나 되어서 회고를 작성하게 되었다. 18년, 19년에는 간단하게라도 연말 회고를 진행했는데 20년, 21년에는 어떤 이유 때문인지는 잘 기억나지 않지만, 회고를 작성하지 않았다.\n마지막 회고 때만 하더라도 0년 차 개발자였던 내가 내년 1월이 되면 벌써 3년 차 개발자가 된다.…","fields":{"slug":"/Retrospective/우당탕-3년-차-프론트엔드-개발자가-돌아보는-한해/"},"frontmatter":{"date":"December 28, 2022","title":"우당탕 3년 차 프론트엔드 개발자가 돌아보는 한해","category":"Retrospective","draft":false}}},{"node":{"excerpt":"React의 기본적인 렌더링 방식 React는 기본적으로 단일 페이지 애플리케이션(Single Page Application, SPA)으로 흔하게 사용됩니다.\nSPA가 동작하기 위해서는 처음 요청을 보냈을 때 앱에 필요한 스크립트들을 전부 다운로드해야 합니다.\n이 SPA 앱은 라우터(router)를 이용해 URL을 변경하며 페이지 이동을 자연스럽게 할 수…","fields":{"slug":"/React/react-rendering-with-gatsby-and-next/"},"frontmatter":{"date":"October 26, 2022","title":"GatsbyJS와 NextJS로 알아보는 React 렌더링 방식","category":"React","draft":null}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Functional design series에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. 함수형 디자인: 대수적 자료형 새로운 애플리케이션을 구축하는 첫 번째 단계는 해당 도메인 모델을 정…","fields":{"slug":"/TypeScript/2022-05-10-fp-ts-funtional-design-7/"},"frontmatter":{"date":"May 10, 2022","title":"함수형 디자인: 대수적 자료형","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Functional design series에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. 함수형 디자인: 속성 기반 테스트 소개 Eq, Ord, Semigroup 과 Monoid에 대한 이…","fields":{"slug":"/TypeScript/2022-01-03-fp-ts-funtional-design-6/"},"frontmatter":{"date":"January 03, 2022","title":"함수형 디자인: 속성 기반 테스트 소개","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Functional design series에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. 함수형 디자인: Typescript에서의 TDD (의 남용) 타입 주도 개발(TDD)은 문제를 더 …","fields":{"slug":"/TypeScript/2021-12-05-fp-ts-funtional-design-5/"},"frontmatter":{"date":"December 05, 2021","title":"함수형 디자인: Typescript에서의 TDD (declare의 남용)","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Functional design series에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. 함수형 디자인: 똑똑한 생성자 때로는 일반적인 타입 검사로 달성할 수 있는 것 이상으로 프로그램의 …","fields":{"slug":"/TypeScript/2021-08-13-fp-ts-funtional-design-4/"},"frontmatter":{"date":"August 13, 2021","title":"함수형 디자인: 똑똑한 생성자","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Functional design series에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. 함수형 디자인: tagless final 지난 글에서 유사한 Unix 명령을 모방하는  combin…","fields":{"slug":"/TypeScript/2021-07-31-fp-ts-funtional-design-3/"},"frontmatter":{"date":"July 31, 2021","title":"함수형 디자인: tagless final","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Functional design series에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. 함수형 디자인: time combinators를 더 일반적으로 만드는 방법 지난 포스트에서 유사한 …","fields":{"slug":"/TypeScript/2021-07-20-fp-ts-funtional-design-2/"},"frontmatter":{"date":"July 20, 2021","title":"함수형 디자인: time combinators를 더 일반적으로 만드는 방법","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Functional design series에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. 함수형 디자인: combinators 이번 포스트에서 “combinator”라는 용어는 combin…","fields":{"slug":"/TypeScript/2021-07-12-fp-ts-funtional-design-1/"},"frontmatter":{"date":"July 12, 2021","title":"함수형 디자인: combinators","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Getting Started에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. fp-ts 시작하기 (Reader)  모나드의 목적은 필요한 곳에서 인자를 얻기 위해 여러 함수를 통해 인자가 전달…","fields":{"slug":"/TypeScript/2021-07-05-fp-ts-11/"},"frontmatter":{"date":"July 05, 2021","title":"fp-ts로 Typescript 함수형 프로그래밍 시작하기 11 (Reader)","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Getting Started에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. fp-ts 시작하기 (IO) 에서 동기적인 이펙트 있는 계산은 기본적으로  시그니처를 갖는 썽크인  타입으로 표현합…","fields":{"slug":"/TypeScript/2021-06-20-fp-ts-10/"},"frontmatter":{"date":"June 20, 2021","title":"fp-ts로 Typescript 함수형 프로그래밍 시작하기 10 (IO)","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Getting Started에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. 문제 계정을 등록하기 위한 웹 양식을 구현해야 합니다. 양식에는 과  두 가지 필드가 있으며 아래의 유효성 검사 규…","fields":{"slug":"/TypeScript/2021-06-12-fp-ts-9/"},"frontmatter":{"date":"June 12, 2021","title":"fp-ts로 Typescript 함수형 프로그래밍 시작하기 9 (Either vs Validation)","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Getting Started에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. fp-ts 시작하기 (Monad) 지난 포스트에서 우리는 이 Applicative 인스턴스를 인정한다면 를 들어 올…","fields":{"slug":"/TypeScript/2021-06-05-fp-ts-8/"},"frontmatter":{"date":"June 05, 2021","title":"fp-ts로 Typescript 함수형 프로그래밍 시작하기 8 (Monad)","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Getting Started에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. fp-ts 시작하기 (Applicative) 지난 포스트에서 우리는 가 Functor 인스턴스를 허용하는 경우 를 …","fields":{"slug":"/TypeScript/2021-05-30-fp-ts-7/"},"frontmatter":{"date":"May 30, 2021","title":"fp-ts로 Typescript 함수형 프로그래밍 시작하기 7 (Applicative)","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Getting Started에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. fp-ts 시작하기 (Functor) 카테고리에 대한 지난 포스트에서 TS 카테고리 (TypeScript 카테고리)…","fields":{"slug":"/TypeScript/2021-05-02-fp-ts-6/"},"frontmatter":{"date":"May 02, 2021","title":"fp-ts로 Typescript 함수형 프로그래밍 시작하기 6 (Functor)","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Getting Started에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. fp-ts 시작하기 (Category) 지난 포스트에서 우리는 함수형 프로그래밍에 사용되는 몇 가지 기본 추상화인 …","fields":{"slug":"/TypeScript/2021-05-01-fp-ts-5/"},"frontmatter":{"date":"May 01, 2021","title":"fp-ts로 Typescript 함수형 프로그래밍 시작하기 5 (Category)","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Getting Started에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. fp-ts 시작하기 (Monoid) 지난 포스트에서는 이 (을 통해) 값 “병합”의 개념을 포착하는 것을 보았습니다…","fields":{"slug":"/TypeScript/2021-04-29-fp-ts-4/"},"frontmatter":{"date":"April 29, 2021","title":"fp-ts로 Typescript 함수형 프로그래밍 시작하기 4 (Monoid)","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Getting Started에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. fp-ts 시작하기 (Semigroup) 은 함수형 프로그래밍의 근본적인 추상화이므로 이 글의 내용이 평소보다 길어…","fields":{"slug":"/TypeScript/2021-04-25-fp-ts-3/"},"frontmatter":{"date":"April 25, 2021","title":"fp-ts로 Typescript 함수형 프로그래밍 시작하기 3 (Semigroup)","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Getting Started에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. fp-ts 시작하기 (Ord) Eq에 대한 이전 블로그 게시물에서는 동등성에 대한 개념을 다루고 있었습니다. 이 블…","fields":{"slug":"/TypeScript/2021-04-25-fp-ts-2/"},"frontmatter":{"date":"April 25, 2021","title":"fp-ts로 Typescript 함수형 프로그래밍 시작하기 2 (Ord)","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Getting Started에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. fp-ts 시작하기 (Eq) 이 블로그 시리즈에서는 종종 “타입 클래스”와 “인스턴스”에 대해 이야기할 것입니다. …","fields":{"slug":"/TypeScript/2021-04-24-fp-ts-1/"},"frontmatter":{"date":"April 24, 2021","title":"fp-ts로 Typescript 함수형 프로그래밍 시작하기 1 (Eq)","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 fp-ts 공식 문서의 Learning Resources에 있는 Getting Started에서 소개하는 문서들을 번역하며 학습한 문서입니다. 원본 문서는 링크에서 확인할 수 있으며 작성한 코드들은 여기에서 확인할 수 있습니다. fp-ts를 이용한 비함수형 코드와의 상호 운용성 때로는 함수형 프로그래밍 스타일로 작성되지 않은 코드와 상호 운영…","fields":{"slug":"/TypeScript/2021-04-21-fp-ts-0/"},"frontmatter":{"date":"April 21, 2021","title":"fp-ts로 Typescript 함수형 프로그래밍 시작하기 0","category":"TypeScript","draft":false}}},{"node":{"excerpt":"본 포스트는 ReScript 공식문서를 스터디하며 정리한 포스트 입니다.\n포스트를 작성하며 작성한 코드는 여기에서 확인할 수 있습니다. Array and List Array Array는 ReScript에서 기본적으로 정렬된 자료구조다. JavaScript의 배열과 동일한 방식으로 동작한다. ReScript의 배열의 각 항목은 타입이 동일해야 한다. Arr…","fields":{"slug":"/ReScript/2020-12-31-ReScriptTutorialPart10/"},"frontmatter":{"date":"December 31, 2020","title":"ReScript 공식문서로 ReScript 훑어보기 (10)","category":"ReScript","draft":false}}},{"node":{"excerpt":"본 포스트는 ReScript 공식문서를 스터디하며 정리한 포스트 입니다.\n포스트를 작성하며 작성한 코드는 여기에서 확인할 수 있습니다. Null, Undefined and Option ReScriptt에는  또는  개념이 존재하지 않는다. 모든 카테고리의 버그를 없애기 때문에 이것은 좋은 일이다. 더이상 이나 를 마주칠 일이 없다. 그러나, 잠재적으로 존…","fields":{"slug":"/ReScript/2020-12-28-ReScriptTutorialPart9/"},"frontmatter":{"date":"December 28, 2020","title":"ReScript 공식문서로 ReScript 훑어보기 (9)","category":"ReScript","draft":false}}},{"node":{"excerpt":"본 포스트는 ReScript 공식문서를 스터디하며 정리한 포스트 입니다.\n포스트를 작성하며 작성한 코드는 여기에서 확인할 수 있습니다. Variant 지금까지 살펴본 대부분의 ReScript의 자료구조는 익숙할 수 있다. 이 절에서는 매우 중요하면서도 익숙하지 않은 자료구조인 Variant를 소개한다. 대부분의 언어에서 대부분의 자료구조는 “이것 and …","fields":{"slug":"/ReScript/2020-12-26-ReScriptTutorialPart8/"},"frontmatter":{"date":"December 26, 2020","title":"ReScript 공식문서로 ReScript 훑어보기 (8)","category":"ReScript","draft":false}}},{"node":{"excerpt":"본 포스트는 ReScript 공식문서를 스터디하며 정리한 포스트 입니다.\n포스트를 작성하며 작성한 코드는 여기에서 확인할 수 있습니다. Object ReScript의 Object타입은 Record타입과 비슷하지만 아래와 같은 차이점이 있다. 타입 선언이 필요하지 않다. Record타입과 다르게 구조적이고 다형성이 강하다. 객체가 JavaScript쪽에서 …","fields":{"slug":"/ReScript/2020-12-23-ReScriptTutorialPart7/"},"frontmatter":{"date":"December 23, 2020","title":"ReScript 공식문서로 ReScript 훑어보기 (7)","category":"ReScript","draft":false}}},{"node":{"excerpt":"본 포스트는 ReScript 공식문서를 스터디하며 정리한 포스트 입니다.\n포스트를 작성하며 작성한 코드는 여기에서 확인할 수 있습니다. Record Record는 JavaScript의 객체와 비슷하지만 아래와 같은 차이점이 존재한다. 기본적으로 불변하다. 확장 불가능한 고정적인 필드들을 갖는다. Record의 타입 선언 Record는 필수적으로 타입 선언…","fields":{"slug":"/ReScript/2020-12-21-ReScriptTutorialPart6/"},"frontmatter":{"date":"December 21, 2020","title":"ReScript 공식문서로 ReScript 훑어보기 (6)","category":"ReScript","draft":false}}},{"node":{"excerpt":"본 포스트는 ReScript 공식문서를 스터디하며 정리한 포스트 입니다.\n포스트를 작성하며 작성한 코드는 여기에서 확인할 수 있습니다. Tuple Tuple은 JavaScript에는 없는 ReScrpt 전용 데이터 구조다. Tuple은 아래와 같은 특성이 존재한다. 불변함 (Immutable) 순서가 존재함 (Ordered) 생성될 때 고정된 크기를 갖음…","fields":{"slug":"/ReScript/2020-12-20-ReScriptTutorialPart5/"},"frontmatter":{"date":"December 20, 2020","title":"ReScript 공식문서로 ReScript 훑어보기 (5)","category":"ReScript","draft":false}}},{"node":{"excerpt":"본 포스트는 ReScript 공식문서를 스터디하며 정리한 포스트 입니다.\n포스트를 작성하며 작성한 코드는 여기에서 확인할 수 있습니다. ReScript의 Primitive Type ReScript는 string, int, float과 같은 친숙한 원시 타입을 제공한다. ReScript의 원시 타입은 아래와 같다. String Char Regular Exp…","fields":{"slug":"/ReScript/2020-12-19-ReScriptTutorialPart4/"},"frontmatter":{"date":"December 19, 2020","title":"ReScript 공식문서로 ReScript 훑어보기 (4)","category":"ReScript","draft":false}}},{"node":{"excerpt":"본 포스트는 ReScript 공식문서를 스터디하며 정리한 포스트 입니다.\n포스트를 작성하며 작성한 코드는 여기에서 확인할 수 있습니다. ReScript의 Type ReScript의 타입 시스템은 아래와 같은 장점이 존재한다. 강하다 (Strong) ReScript에서 하나의 타입은 다른 타입으로 변경될 수 없다. JavaScript에서는 코드가 실행되는 …","fields":{"slug":"/ReScript/2020-12-17-ReScriptTutorialPart3/"},"frontmatter":{"date":"December 17, 2020","title":"ReScript 공식문서로 ReScript 훑어보기 (3)","category":"ReScript","draft":false}}},{"node":{"excerpt":"본 포스트는 ReScript 공식문서를 스터디하며 정리한 포스트 입니다.\n포스트를 작성하며 작성한 코드는 여기에서 확인할 수 있습니다. Let Binding ReScript에서의 Let Binding은 다른 언어에서의 변수 선언이라고 할 수 있다. 위의 코드와 같이  키워드를 사용해 값을 이름에 바인딩한다. Block Scope ReScript에서는 를 …","fields":{"slug":"/ReScript/2020-12-16-ReScriptTutorialPart2/"},"frontmatter":{"date":"December 16, 2020","title":"ReScript 공식문서로 ReScript 훑어보기 (2)","category":"ReScript","draft":false}}},{"node":{"excerpt":"본 포스트는 ReScript 공식문서를 스터디하며 정리한 포스트 입니다.\n포스트를 작성하며 작성한 코드는 여기에서 확인할 수 있습니다. ReScript란? ReScript의 공식문서에 따르면 ReScript는 JavaScript를 사랑하지는 않지만 자바스크립트의 중요성을 인정하는 사람들을 위한 언어라고 한다. ReScript는 JavaScript처럼 보이…","fields":{"slug":"/ReScript/2020-12-15-ReScriptTutorialPart1/"},"frontmatter":{"date":"December 15, 2020","title":"ReScript 공식문서로 ReScript 훑어보기 (1)","category":"ReScript","draft":false}}},{"node":{"excerpt":"33-js-concepts를 스터디하며 정리한 포스트 입니다. 비트 연산자 자바스크립트는 아래의 7가지의 비트 연산자를 지원한다. 연산자 이름 설명 & AND 양쪽의 비트가 모두 1인 비트만 1로 설정한다. | OR 양쪽 비트 중 하나가 1이면 비트를 1로 설정한다. ^ XOR 양쪽 비트 중 하나만 1일 경우 비트를 1로 설정한다. ~ NOT 모든 비트를…","fields":{"slug":"/Javascript/2020-10-10-Bitwise_TypedArray_ArrayBuffer/"},"frontmatter":{"date":"October 10, 2020","title":"비트 연산자, 형식화 배열, 버퍼(배열)","category":"Javascript","draft":false}}},{"node":{"excerpt":"🚧  글을 작성하기에 앞서 저는 9개월 정도 다닌 첫 직장을 그만두고 첫 이직을 했습니다.\n대학생 신분으로 첫 회사를 구하고 첫 이직을 하기까지의 경험과 팁을 담은 회고 글 입니다.\n작성된 모든 내용은 제 경험을 기반으로 한 주관적인 글이므로 참고만 하셨으면 좋겠습니다.\n첫 회사를 구하려는 학생과 이직을 준비하는 주니어분들 모두 원하시는 것들 다 이루셨으…","fields":{"slug":"/Retrospective/2020-10-05-개발자로서-첫-이직-회고/"},"frontmatter":{"date":"October 05, 2020","title":"개발자로서 첫 이직 회고","category":"Retrospective","draft":false}}},{"node":{"excerpt":"33-js-concepts를 스터디하며 정리한 포스트 입니다. 자바스크립트에서의 스케쥴링 자바스크립트에서는 스케쥴링을 위한 타이머 함수가 존재한다.\n사용가능한 타이머 함수와 타이머 함수의 기능은 아래와 같다. 함수 이름 기능 setTimeout(fn, timeout) 일정 시간 후 fn으로 받은 함수를 실행한다. setInterval(fn, interva…","fields":{"slug":"/Javascript/2020-06-29-setTimeout_setInterval_requestAnimationFrame/"},"frontmatter":{"date":"June 29, 2020","title":"setTimeout, setInterval and requestAnimationFrame","category":"Javascript","draft":false}}},{"node":{"excerpt":"33-js-concepts를 스터디하며 정리한 포스트 입니다. 자바스크립트의 특징 자바스크립트는 싱글 스레드 기반의 언어이며 1개의 콜스택을 사용한다.\n1개의 콜스택을 사용하기 때문에 하나의 함수의 작업이 오래걸리게 되면\n그 이후에 실행될 다른 작업들은 실행이 되지 못하는 상황이 발생하게 된다.\n이 문제를 해결하기 위하여 비동기 콜백 방식을 사용하고 있다…","fields":{"slug":"/Javascript/2020-06-24-Messag_Queue_Event_Loop/"},"frontmatter":{"date":"June 24, 2020","title":"메시지 큐와 이벤트 루프","category":"Javascript","draft":false}}},{"node":{"excerpt":"이전 포스트에서는 Django에서 JWT인증을 위한 미들웨어 작성법을 알아보았다.\n이번에는 를 사용하기 위한 인증 토큰을 발행하는 과정을 다루어보겠다.\n기본적으로 과  두 가지의 에서 토큰을 발행된다. URL 설정하기 인증과 관련된 로직을 처리하기 위한 앱을 새로만들었다.\n그 후 앞서 얘기했던 것과 같이 로그인과 회원가입에 필요한 두 을 설정한다.\n아직 …","fields":{"slug":"/Django/2020-06-08-Django-JWT-2/"},"frontmatter":{"date":"June 08, 2020","title":"Pure Django로 JWT인증 구현하기 (2)","category":"Django","draft":false}}},{"node":{"excerpt":"JWT란? Json Web Token의 약자로 JSON 객체로 정보를 전달하는 방식이다.\n이 포스트에서는 JWT을 이용해 인증을 구현하는 방식을 다루어볼 것이다. JWT에 관해서 자세하게 알고 싶다면 아래의 링크를 확인하면 좋을 것이다. Velopert님 블로그 조대협님 블로그 필요한 패키지 설치하기 JWT인증을 구현하기위해 아래의 패키지 3개를 설치하였…","fields":{"slug":"/Django/2020-06-01-Django-JWT-1/"},"frontmatter":{"date":"June 01, 2020","title":"Pure Django로 JWT인증 구현하기 (1)","category":"Django","draft":false}}},{"node":{"excerpt":"33-js-concepts를 스터디하며 정리한 포스트 입니다. IIFE IIFE는 Immediately Invoked Function Expression으로 즉시 호출 함수 표현식이다.\nIIFE의 기본적인 형태는 아래와 같다. IIFE는 함수 선언과 동시에 함수 호출이 되는 익명 함수다.\n함수 선언을 아래와 같이 함수 이름이 없이 선언을 할 경우에는 오류…","fields":{"slug":"/Javascript/2020-05-18-IIFE-Modules-Namespaces/"},"frontmatter":{"date":"May 18, 2020","title":"IIFE, Modules, Namespaces","category":"Javascript","draft":false}}},{"node":{"excerpt":"Recoil 공식 문서 중 Introduction - Core Concepts를 번역한 포스트입니다. 개요 Recoil을 사용하면 atoms (공유 상태)에서 selectors (순수 함수)를 거쳐 React 컴포넌트로 내려가는 데이터 흐름 그래프를 생성할 수 있다.\nAtoms는 컴포넌트가 구독할 수 있는 상태의 단위다. Selectors 가 이 상태를 …","fields":{"slug":"/React/2020-05-17-Recoil-Core-Concepts/"},"frontmatter":{"date":"May 17, 2020","title":"Recoil - Core Concepts","category":"React","draft":false}}},{"node":{"excerpt":"Recoil 공식 문서 중 Basic Tutorial Bonus: Performance를 번역한 포스트입니다. Bonus : 성능 우리가 구현한 기존의 것은 완벽하게 유요하다.\n하지만 우리 앱이 작은 토이 프로젝트에서 백만줄짜리 기업 프로그램으로 발전하면서 고려해야 할 중요한 성능적 측면이 있다. 우리의 컴포넌트들을 다시 랜더링 시키는 원인이 무엇인지 생…","fields":{"slug":"/React/2020-05-17-Recoil-Basic-Tutorial-Performace/"},"frontmatter":{"date":"May 17, 2020","title":"Bonus: Performance","category":"React","draft":false}}},{"node":{"excerpt":"Recoil 공식 문서 중 Basic Tutorial Selectors를 번역한 포스트입니다. Selectors Selector는 파생된 상태(derived state)의 일부를 나타낸다.\n파생된 상태를 어떤 방법으로든 주어진 상태를 수정하는 순수 함수에 전달된 상태의 결과물로 생각할 수 있다. 파생된 상태는 다른 데이터에 의존하는 동적인 데이터를 만들 …","fields":{"slug":"/React/2020-05-16-Recoil-Basic-Tutorial-Selectors/"},"frontmatter":{"date":"May 16, 2020","title":"Selectors","category":"React","draft":false}}},{"node":{"excerpt":"Recoil 공식 문서 중 Basic Tutorial Atoms를 번역한 포스트입니다. Atoms Atoms는 애플리케이션 상태의 source of truth를 갖는다.\ntodo 리스트에서 source of truth는 todo 아이템을 나타내는 객체로 이루어진 배열이 될 것이다. 우리는 atom 리스트를 라고 하고 이것을  함수를 이용해 생성할 것이다.…","fields":{"slug":"/React/2020-05-15-Recoil-Basic-Tutorial-Atoms/"},"frontmatter":{"date":"May 15, 2020","title":"Atoms","category":"React","draft":false}}},{"node":{"excerpt":"Recoil 공식 문서 중 Basic Tutorial Intro를 번역한 포스트입니다. Intro 이 섹션은 Recoil과 React가 설치했다고 가정한다.\nRecoil과 React를 처음부터 시작하는 방법은 Getting Started를 보면된다.\n앞으로의 섹션의 컴포넌트들은 부모트리에 가 있다고 가정한다. 이 튜토리얼에서는 간단한 todo 리스트 애플…","fields":{"slug":"/React/2020-05-15-Recoil-Basic-Tutorial-Intro/"},"frontmatter":{"date":"May 15, 2020","title":"Recoil Basic Tutorial Intro","category":"React","draft":false}}},{"node":{"excerpt":"Recoil 공식 문서 중 Getting Started를 번역한 포스트입니다. React 애플리케이션 생성하기 Recoil는 React를 위한 상태 관리 라이브러리다.\n따라서 Recoil를 사용하기 위해서는 React가 설치되어 있어야 한다.\nReact 애플리케이션을 시작하는 가장 쉽고 추천하는 방법은 Create React App을 사용하는 것이다. 는…","fields":{"slug":"/React/2020-05-15-Recoil/"},"frontmatter":{"date":"May 15, 2020","title":"Recoil 시작하기","category":"React","draft":false}}},{"node":{"excerpt":"33-js-concepts를 스터디하며 정리한 포스트 입니다. 자바스크립트의 식과 문 자바스크립트에는 대표적은 2가지 문법 카테고리가 존재한다. 식 (Expression) 문 (Statement) 식 (Expression)은 문 (Statement)처럼 동작할 수 있다.\n문 (Statement)은 식 (Expression)처럼 동작할 수 없다. 식 (Ex…","fields":{"slug":"/Javascript/2020-05-14-Expression_vs_Statement/"},"frontmatter":{"date":"May 14, 2020","title":"식(expression) vs 문(statement)","category":"Javascript","draft":false}}},{"node":{"excerpt":"33-js-concepts를 스터디하며 정리한 포스트 입니다. 범위 (Scope)란? 프로그램 언어에서 범위 (Scope)는 변수의 접근 가능과, 생존 기간을 뜻한다.\n범위 (Scope)는 크게 전역 범위(Global Scope), 지역 범위(Local Scope)가 존재한다.\n전역 범위(Global Scope)는 코드 전체에서 참조 가능한 것을 의미하고…","fields":{"slug":"/Javascript/2020-05-13-FunctionScope_BlockScope_and_LexicalScope/"},"frontmatter":{"date":"May 13, 2020","title":"함수 범위, 블록 범위, 렉시컬(lexical) 범위","category":"Javascript","draft":false}}},{"node":{"excerpt":"33-js-concepts를 스터디하며 정리한 포스트 입니다. 자바스크립트의 동등연산자 자바스크립트는 와 두개의 동등연산자가 존재한다.\n아래는 유명한 자바스크립트 밈이다. 위의 밈을 코드로 나타내면 아래와 같을 것이다. 과 의 연산 결과와 고 과 의 연산결과는 다.\n삼단논법으로 추론할 경우 당연히 과 의 결과 또한 겠지만,\n자바스크립트 엔진은 의 결과를 …","fields":{"slug":"/Javascript/2020-05-12-==-vs-===vs-typeof/"},"frontmatter":{"date":"May 12, 2020","title":"== vs === vs typeof","category":"Javascript","draft":false}}},{"node":{"excerpt":"33-js-concepts를 스터디하며 정리한 포스트 입니다. 형변환(Type Conversion)이란? 프로그램을 작성하면서 문자를 숫자로, 숫자로 문자로 변환해야하는 작업이 생긴다. 위와 같은 코드 처럼 나 같은 함수를 이용해서 형변환을 할 수 있다.\n자바스크립트에서는 나 와 같은 언어와 달리 나 을 이용해 변수를 선언한다.\n자바스크립트에서 형변환을 …","fields":{"slug":"/Javascript/2020-05-11-Implicit_Explict_Nominal_Structuring_DuckTyping/"},"frontmatter":{"date":"May 11, 2020","title":"명시적, 암시적 변환, Nominal, 구조화, 덕 타이핑","category":"Javascript","draft":false}}},{"node":{"excerpt":"33-js-concepts를 스터디하며 정리한 포스트 입니다. 값 타입(Value Type)이란? 자바스크립트에서 값 타입(Value Type)은 원시 타입(Primitive Type)과 비슷하다.\n아래의 6가지 데이터 타입을 자바스크립트에서 값 타입(Value Type)이라고 한다.  (, )    (, , )  (, )  (, , ) 모든 값 타입(V…","fields":{"slug":"/Javascript/2020-05-08-ValueTypeReferenceType/"},"frontmatter":{"date":"May 08, 2020","title":"값 타입(Value Type)과 참조 타입(Reference Type))","category":"Javascript","draft":false}}},{"node":{"excerpt":"33-js-concepts를 스터디하며 정리한 포스트 입니다. 원시 타입(Primitive Type)이란? 자바스크립트에서는 원시 타입 참조 타입이라는 두 가지 자료형을 제공한다.\n자바스크립트에서 원시 타입으로는 아래의 7개가 존재한다.  (, )    (, , )  (, )  (, , )  (, ) 은 에 새로 추가된 원시 타입이고 는  부터 추가되었다…","fields":{"slug":"/Javascript/2020-03-06-PrimitiveType/"},"frontmatter":{"date":"March 06, 2020","title":"원시 타입 (Primitive Type)","category":"Javascript","draft":false}}},{"node":{"excerpt":"33-js-concepts를 스터디하며 정리한 포스트 입니다. 스택(Stack)이란? 스택(Stack)은 후입선출(Last In First Out, LIFO)을 기본으로하는 자료구조다.\n기본적인 보통 연산은 , , , 가 존재한다.  : 스택의 출력 연산  : 스택의 입력 연산  : 스택의 가장 상단의 데이터를 확인하는 연산  : 스택이 비어있는지 확인하…","fields":{"slug":"/Javascript/2020-02-28-callstack/"},"frontmatter":{"date":"February 28, 2020","title":"콜스택 (Call Stack)","category":"Javascript","draft":false}}},{"node":{"excerpt":"플로이드 시간 제한 메모리 제한 1초 256MB 문제 n(1 ≤ n ≤ 100)개의 도시가 있다. 그리고 한 도시에서 출발하여 다른 도시에 도착하는 m(1 ≤ m ≤ 100,000)개의 버스가 있다. 각 버스는 한 번 사용할 때 필요한 비용이 있다. 모든 도시의 쌍 (A, B)에 대해서 도시 A에서 B로 가는데 필요한 비용의 최솟값을 구하는 프로그램을 작…","fields":{"slug":"/Algorithms/2020-02-11-BOJ-11404/"},"frontmatter":{"date":"February 11, 2020","title":"BOJ 11404 플로이드","category":"Algorithms","draft":false}}},{"node":{"excerpt":"Hashing 시간 제한 메모리 제한 1초 512MB 문제 APC에 온 것을 환영한다. 만약 여러분이 학교에서 자료구조를 수강했다면 해시 함수에 대해 배웠을 것이다. 해시 함수란 임의의 길이의 입력을 받아서 고정된 길이의 출력을 내보내는 함수로 정의한다. 해시 함수는 무궁무진한 응용 분야를 갖는데, 대표적으로 자료의 저장과 탐색에 쓰인다. 이 문제에서는 …","fields":{"slug":"/Algorithms/2020-02-03-BOJ-15829/"},"frontmatter":{"date":"February 03, 2020","title":"BOJ 15829 Hashing","category":"Algorithms","draft":false}}},{"node":{"excerpt":"색종이 만들기 시간 제한 메모리 제한 1초 128MB 문제 아래 <그림 1>과 같이 여러개의 정사각형칸들로 이루어진 정사각형 모양의 종이가 주어져 있고,\n각 정사각형들은 하얀색으로 칠해져 있거나 파란색으로 칠해져 있다.\n주어진 종이를 일정한 규칙에 따라 잘라서 다양한 크기를 가진 정사각형 모양의 하얀색 또는 파란색 색종이를 만들려고 한다. 전체 종이의 크…","fields":{"slug":"/Algorithms/2020-01-30-BOJ-2630/"},"frontmatter":{"date":"January 30, 2020","title":"BOJ 2630 색종이 만들기","category":"Algorithms","draft":false}}},{"node":{"excerpt":"진수 변환기 시간 제한 메모리 제한 2초 512MB 문제 정수 m, n을 입력 받아, 10진수 m을 n진수로 바꾸어 출력하는 프로그램을 작성하시오. 입력 첫 줄에서 정수 m, n을 입력 받는다. (0 ≤ m ≤ 1,000,000, 2 ≤ n ≤ 16) 출력 변환한 n진수의 수를 출력한다. 11~16 진수의 경우 10 이상의 수는 A~F 문자를 사용한다.\n…","fields":{"slug":"/Algorithms/2020-01-28-BOJ-14915/"},"frontmatter":{"date":"January 28, 2020","title":"BOJ 14915 진수변환기","category":"Algorithms","draft":false}}},{"node":{"excerpt":"계기 기존에 기반의 을 이용해 블로그를 사용하고 있었다.\njekyll uno라는 테마를 사용하고 있었는데, 테마가 글과 코드의 가독성을 너무 해치는 듯 했다.\n기존부터 관심이 있었던 기반의 로 플랫폼을 옮기기로 결정하게 되었다.\n테마는 이전 부터 보았던 jbee님의 gatsby-starter-bee를 사용하기로 했다.\n로컬 환경에서 테스트를 마치고 배포를…","fields":{"slug":"/Automation/2020-01-24-GatsbyGithubAction/"},"frontmatter":{"date":"January 23, 2020","title":"Github Action으로 Gatsby 블로그 배포 자동화하기","category":"Automation","draft":false}}},{"node":{"excerpt":"node-oracledb 설치 오류 발생 처음들어간 회사에서 패키지가 필요한 프로젝트에 참여하게 되었다.\n프로젝트를 클론한 후 명령어를 실행했지만 설치가 되지않고 오류가 발생했다. 오류 해결 방법 에러 로그에서도 확인이 가능하지만 설치되어있는 의 버전 문제였다.\n회사의 컴퓨터에는 LTS버전인 이 설치되어 있지만\n패키지는 해당 버전을 지원하지 않는다.\n의 …","fields":{"slug":"/Node/2020-01-13-NodeOracleBugFix/"},"frontmatter":{"date":"January 13, 2020","title":"node-oracledb 설치 오류 해결","category":"NodeJS","draft":false}}},{"node":{"excerpt":"2017년 여름 비전공자로 개발을 시작하고 2년동안 많은 일들이 있었지만\n2019년은 그 어느때보다 많은 경험을 할 수 있었던 해였다.\n사실 많은 것을 짧은 시간동안에 모두 병행하려 하다보니까\n어느 부분에는 부족함이 생기게 되어서 굉장히 아쉬운 마음이 크다. 멋쟁이 사자처럼 7기 운영진 멋쟁이 사자처럼은 내가 처음으로 관심있던 대외활동 중 하나다.\n학교에…","fields":{"slug":"/Retrospective/2019-12-29-GoodBye2019/"},"frontmatter":{"date":"December 29, 2019","title":"2019년 개발 회고","category":"Retrospective","draft":false}}},{"node":{"excerpt":"코드의 중복의 발생 우리가 작성한  컴포넌트를 여러개 생성하기 위해서\n아래와 같이 여러개의 컴포넌트를 모두 작성해 사용했었다. 이와 같이 사용할 경우 같은 컴포넌트가 중복되는 것을 볼 수 있다. 중복의 제거 아래와 같이 배열을 생성해 중복된 컴포넌트에 들어간 데이터를 옮겨보자.\n함수에 라는 배열을 생성해 주었다. 위와 같이 작성한 배열을 사용하기 위해서는…","fields":{"slug":"/React/2019-11-24-ListAndKey/"},"frontmatter":{"date":"November 24, 2019","title":"map으로 컴포넌트 리스트 만들기","category":"React","draft":false}}},{"node":{"excerpt":"Props란? 컴포넌트간 데이터를 이동하는 수단\n는 Read Only로 읽기만 수행 가능하므로 변경이 불가능하다. Props 실습으로 이해하기 지난 강의에 사용했던 코드를 기반으로 세계 시간을 보여주는 앱을 제작해보겠습니다. 컴포넌트는 아래와 같이 함수를 이용해서 작성할 수 있다. 위의 컴포넌트는 이라는 이름을 갖고 를 인자로 받는 컴포넌트다. 아래의 컴…","fields":{"slug":"/React/2019-11-13-Props/"},"frontmatter":{"date":"November 13, 2019","title":"실습으로 Props 이해하기","category":"React","draft":false}}},{"node":{"excerpt":"JSX JavaScript XML의 약자\n에서 사용하는 과 비슷하다. 특징 태그 이름은 기존 과 거의 유사하다. Attributes나 css는 카멜 케이스를 사용한다. (, ) 를 활용하기 위해서는 를 이용한다. JSX 사용해보기 이전과 동일하게 아래의 명령어를 사용해 앱을 생성해줍니다. 앱 생성이 완료되었다면 파일을 아래와 같이 수정합니다. h1 태그에…","fields":{"slug":"/React/2019-11-10-JSX/"},"frontmatter":{"date":"November 10, 2019","title":"JSX 훑어보기","category":"React","draft":false}}},{"node":{"excerpt":"NPM Node Package Manager의 약자\n의 다양한 라이브러리들을 관리해주는 도구\n에서 비슷한 도구로는 가 존재한다. NPM의 특징 개별 프로젝트 폴더에 따로 설치 가능 전체적으로 사용하도록 설치 가능 (, ) 으로 시작하는 명령어로 사용 와 같이 모듈 설치 없이 사용할 수 있게 해주는 툴 존재 Node.js 설치 및 확인 https://nod…","fields":{"slug":"/React/2019-11-07-CreateReactApp/"},"frontmatter":{"date":"November 07, 2019","title":"React앱 생성 및 구조 이해하기","category":"React","draft":false}}},{"node":{"excerpt":"React란? Facebook에서 제작한 웹 프레임워크\n비교되는 대상으로는 Angular.js나 Vue.js가 있다. stackoverflow Developer Survey Results 2019 개발자의 성지인 스택오버플로우의 통계에 따르면 웹 프레임워크 중 2위를\n차지할 정도로 많이 사용되어지고 있는 웹 프레임워크 중 하나이다.  위의 통계에서 나 같…","fields":{"slug":"/React/2019-11-04-ReactIntro/"},"frontmatter":{"date":"November 04, 2019","title":"React와 DOM, Web Component에 대해서","category":"React","draft":false}}},{"node":{"excerpt":"Promise 언젠가 해결될 것이라는 약속이라는 뜻 이나 를 사용해서 성공하거나 실패했을 때에\n나온 결과를 이후에 동기적으로 처리하도록 한다. Promise 사용 이전 Promise 사용 이후 여기에서 는 처리에 성공했을 때 실행되는 함수이고\n는 처리에 실패했을 때 실행되는 함수다. 아래와 같이 가 정의된 함수를 호출한 후 을 사용해\n함수를 넘기면 처리에…","fields":{"slug":"/React/2019-11-02-PromiseAsyncAwait/"},"frontmatter":{"date":"November 02, 2019","title":"Promise와 Async - Await","category":"React","draft":false}}},{"node":{"excerpt":"공개SW 체험캠프란?  과학기술정보통신부에서 주최하고 정보통신산업진흥원과 충북대학교에서 주관하는 행사다.\n세션1과 세션2로 나누어져 있었으며 세션1은 강연 형식으로 진행되었고\n세션2는 인공지능, 블록체인, 클라우드로 나누어진 실습 형식이었다.\n자세한 정보는 여기에서 확인이 가능하다. 참여 계기  현재 저는 DevelUP이라는 개발 커뮤니티에서 멘토로 활동…","fields":{"slug":"/Retrospective/2019-11-01-OpenSWExperience/"},"frontmatter":{"date":"November 01, 2019","title":"공개SW 체험 캠프 실습 강의 후기","category":"Retrospective","draft":false}}},{"node":{"excerpt":"Asynchronous (비동기성) 절차적으로 진행되지 않는 특성 실행 결과가 반환되기 전에 다른 코드를 실행 가능 예제 가 보다\n먼저 작성되어 있지만 아래와 같이 가 먼저 출력된다.  비동기성의 이유 자바스크립트는 웹에 치중되어 있다. 인터넷 속도에 의존적이다. 사용자의 인터랙션이 존재한다. 속도가 느려도 인터랙션은 되어야 한다. Call back 다른…","fields":{"slug":"/React/2019-10-31-AsyncAndCallback/"},"frontmatter":{"date":"October 31, 2019","title":"Async와 Callback","category":"React","draft":false}}},{"node":{"excerpt":"1일 1커밋 1주년 달성  님의 깃허브(Github)로 취업하기를 보고 깃헙을 시작했던 것 같다.\n2018년 9월 7일부터 시작한 1일 1커밋이 2019년 9월 7일 드디어 1주년을 맞이했다.\n처음 개발을 시작했을 때와는 많은 것이 달라졌겠지만 아직도 많이 부족하다.\n1일 1커밋을 하게 된 계기, 하면서 느낀 점에 대한 회고를 작성해 보려고 합니다. 1일…","fields":{"slug":"/Retrospective/2019-09-10-OneDayOneComitOneYear/"},"frontmatter":{"date":"September 10, 2019","title":"1일 1커밋 1주년 회고","category":"Retrospective","draft":false}}},{"node":{"excerpt":"해당 포스트는 Nomad Coder의 초보를 위한 RN강의를 정리한 내용입니다. 지난 포스트 Review [이전 포스트로 이동] 카메라 타입(전방/후방) 설정 카메라 타입 로 관리 카메라 타입 변경 버튼 추가 카메라 타입 변경 함수 작성 지난 포스트에는 카메라 타입(전방/후방)을 변경하는 것까지 진행했습니다.\n이번 포스트에서는 얼굴을 인식하고 웃는 얼굴일…","fields":{"slug":"/ReactNative/2019-09-01-ReactNativeCameraPermissions4/"},"frontmatter":{"date":"September 01, 2019","title":"React Native로 카메라 사용하기 (4)","category":"React Native","draft":false}}},{"node":{"excerpt":"해당 포스트는 Nomad Coder의 초보를 위한 RN강의를 정리한 내용입니다. 지난 포스트 Review [이전 포스트로 이동]  수정하기 카메라 권한에 따라 다른 화면 표시하기 화면에 스타일 적용하기 화면에 카메라 띄우기 지금까지 카메라 권한을 얻고 카메라를 띄우는 것까지 진행하였고\n이번 포스트에는 전방/후방 카메라를 변경하는 방법에 대해 설명해보겠습니…","fields":{"slug":"/ReactNative/2019-09-01-ReactNativeCameraPermissions3/"},"frontmatter":{"date":"September 01, 2019","title":"React Native로 카메라 사용하기 (3)","category":"React Native","draft":false}}},{"node":{"excerpt":"해당 포스트는 Nomad Coder의 초보를 위한 RN강의를 정리한 내용입니다. 지난 포스트 Review [이전 포스트로 이동] 프로젝트 생성하기  수정하기 필요한 모듈 추가하기 카메라 접근 권한 얻기 마지막까지 해서 우리는 카메라 권환이 승인될 경우\n라는 를 얻을 수 있었습니다.\n이번 포스트는 를 이용해 를 변경하고\n에 따라 다른 화면이 보여지도록 하겠…","fields":{"slug":"/ReactNative/2019-08-31-ReactNativeCameraPermissions2/"},"frontmatter":{"date":"August 31, 2019","title":"React Native로 카메라 사용하기 (2)","category":"React Native","draft":false}}},{"node":{"excerpt":"해당 포스트는 Nomad Coder의 초보를 위한 RN강의를 정리한 내용입니다. Dependencies expo react react-native expo-permissions expo-camera styled-components 모든 모듈의 버전은 최신 버전 기준 입니다. 1. 프로젝트 생성하기 Template는 를 선택합니다. 과 는 임의로 작성합니다…","fields":{"slug":"/ReactNative/2019-08-30-ReactNativeCameraPermissions/"},"frontmatter":{"date":"August 30, 2019","title":"React Native로 카메라 사용하기 (1)","category":"React Native","draft":false}}},{"node":{"excerpt":"자바스크립트 대체 언어의 하나로써 자바스크립트의 상위확장이다.\nTypeScript는 Microsoft에서 2012년 발표한 오픈소스로\n정적 타이핑을 지원하며 ES6의 클래스, 모듈 등과 ES7의 Decorator 등을 지원 JavaScript와 차이 JavaScript 위와 같은 라는 변수를 선언할 때 JavaScript는\n동적으로 변수의 Type을 추론…","fields":{"slug":"/TypeScript/2019-08-16-TypeScriptIntro/"},"frontmatter":{"date":"August 16, 2019","title":"TypeScript란?","category":"TypeScript","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. 사용할 CNN 구성  Conv Layer 1 Pooling Layer 1 Conv Layer 2 Pooling Layer 2 Fully-Connected Layer 사용할 모듈 추가 MNIST 데이터 불러오기 상수 정의 입력값 placeholder 선언 n개…","fields":{"slug":"/MachineLearning/2019-07-20-BasicChapter12-5/"},"frontmatter":{"date":"July 20, 2019","title":"ConvNet을 TensorFlow로 구현하자 (MNIST)","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. LeNet-5 Lecun et al (1998)\n손으로 쓴 크기의 글씨 이미지를 학습\nFilter로 크기의 Filter로 1의 크기의 Stride사용\nPooling을 진행할 때 크기와 2의 크기의 Stride사용\n AlexNet Krizhevsky et al…","fields":{"slug":"/MachineLearning/2019-06-13-BasicChapter12-4/"},"frontmatter":{"date":"June 13, 2019","title":"ConvNet의 활용 예","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Pooling Layer (Sampling) \nPooling은 Sampling이라고도 한다.\n이미지에서 Filter를 처리한 후 생성된 Conv Layer에서\n하나의 Layer만 뽑아낸 후 resize(Sampling)를 한 Layer를 \n위의 그림과 같이 …","fields":{"slug":"/MachineLearning/2019-06-06-BasicChapter12-2/"},"frontmatter":{"date":"June 06, 2019","title":"ConvNet Max pooling 과 Full Network","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Convolutional Neural Network 고양이가 어떠한 사물을 볼때 뇌 전체가 아닌\n일부만 활성화 된다는 사실을 발견함에서 시작 기본적인 CNN의 구성으로 CONV와 RELU가 한 쌍으로 구성되고\n중간중간 POOL이 구성되어 있으며 마지막에는 F…","fields":{"slug":"/MachineLearning/2019-06-06-BasicChapter12-1/"},"frontmatter":{"date":"June 06, 2019","title":"ConvNet의 Conv 레이어 만들기","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. 사용할 모듈 추가 MNIST 데이터 불러오기 상수 정의 입력값 placeholder 선언 keep_prob 선언 부터는 keep_prob를 사용한다.\n이것은 전체 네트워크중 몇 퍼센트를 keep할 것인지 결정한다.\n학습과정에서는 0.5 ~ 0.7정도의 수치를…","fields":{"slug":"/MachineLearning/2019-06-03-BasicChapter11-5-NN-Dropout/"},"frontmatter":{"date":"June 03, 2019","title":"Drop Out을 사용해 MNIST 정확도 높이기","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. 사용할 모듈 추가 MNIST 데이터 불러오기 상수 정의 입력값 placeholder 선언 깊고 넓은 Neural Network 구성하기 Xavier Initialization사용\n5개의 Layer를 사용하는 Neural Network구성 손실함수와 최적화 방…","fields":{"slug":"/MachineLearning/2019-06-03-BasicChapter11-5-NN-Deep/"},"frontmatter":{"date":"June 03, 2019","title":"깊고 넓은 NN으로 MNIST 학습하기","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. 사용할 모듈 추가 MNIST데이터 불러오기 상수 정의 입력값 placeholder 선언 Neural Network 구성 Xavier Initialization사용\nWeight을 저장할 변수를 선언할 때 속성에\n를 적용하면 된다. 손실함수와 최적화 방법 정의 …","fields":{"slug":"/MachineLearning/2019-06-03-BasicChapter11-5-NN-Init/"},"frontmatter":{"date":"June 03, 2019","title":"가중치 초기화로 MNIST 정확도 높이기","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. 사용할 모듈 추가 MNIST 데이터 불러오기 상수 정의 입력값 placeholder 선언 Neural Network 구성 손실함수와 최적화 방법 정의 Session 초기화 모델 학습 진행 모델 테스트 및 정확도 확인 임의의 정수 예측하기 예측한 정수 그리기","fields":{"slug":"/MachineLearning/2019-06-03-BasicChapter11-5-NN/"},"frontmatter":{"date":"June 03, 2019","title":"Neural Network로 MNIST 학습하기","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Feedforward neural network 지금까지 사용한 신경망 구조\n몇단을 쌓을것인지는 선택하면된다. Fast forward \n2015년에 He가 ImageNet에 제출한 모델\n3%이하의 Error를 보인다. Split & Merge \n입력이 1개일…","fields":{"slug":"/MachineLearning/2019-06-01-BasicChapter11-4/"},"frontmatter":{"date":"June 01, 2019","title":"레고처럼 넷트웍 모듈을 마음껏 쌓아 보자","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Overfitting Training Set에 대해서 높은 정확도를 갖는다.\nTest Set에 대해서는 낮은 정확도를 갖는다.\nOverfitting된 모델은 실제로 사용 불가능하다. Overfitting을 방지하는 법 더 많은 학습 데이터 Feature의 갯…","fields":{"slug":"/MachineLearning/2019-05-29-BasicChapter11-3/"},"frontmatter":{"date":"May 29, 2019","title":"Dropout 과 앙상블","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. 활성화 함수 각 Unit 끝의 함수를 Activation function이라고 한다.\n활성화 함수는 출력값이 어떤 값보다 크면 작동하고\n어떤 값보다 작으면 작동하지 않는 함수를 의미한다. Neural Network for XOR 입력값은 공통적으로 ,  2개…","fields":{"slug":"/MachineLearning/2019-05-23-BasicChapter11-1/"},"frontmatter":{"date":"May 23, 2019","title":"XSigmoid 보다 ReLU가 더 좋아","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Vanishing gradient를 해결하는 방법 ReLU 초기 Weight값 설정 랜덤으로 Weight값 설정시 같은 코드를 실행시켜도\nCost값이 변하는 것을 확인할 수 있다. 모든 Weight값을 0으로 초기화해서 사용할 경우 Chain rule을 사용…","fields":{"slug":"/MachineLearning/2019-05-24-BasicChapter11-2/"},"frontmatter":{"date":"May 23, 2019","title":"Weight를 잘 초기화 해보자","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Tensorboard 진행사항을 한눈에 볼 수 있도록 해준다.\nTF Graph 시각화가 가능하다. Tensorboard 사용 단계 어떤 Tensor를 logging할지 결정 logging할 데이터를 merge Summary(logging한 데이터)를 어디에 …","fields":{"slug":"/MachineLearning/2019-05-22-BasicChapter10-5/"},"frontmatter":{"date":"May 22, 2019","title":"Lab 9-2:Tensor Board로 딥네트웍 들여다보기","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. 필요한 모듈 import XOR data set A B X 0 0 0 0 1 1 1 0 1 1 1 0 Boolean Expression Logic Diagram Symbol [이미지 출처] 간단한 데이터셋이므로 따로 입력받지않고 numpy array 사용 L…","fields":{"slug":"/MachineLearning/2019-05-20-BasicChapter10-4/"},"frontmatter":{"date":"May 20, 2019","title":"Lab 9-1:XOR을 위한 텐스플로우 딥넷트웍","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Neural Network (NN) 두개의 유닛의 Weight과 Bias를 학습시키는 방법\nGradient descent알고리즘을 사용\n정의된 Cost함수의 그래프에서 하나의 점에서\n값을 미분해 기울기를 구하며 그래프의 최저점까지 내려가면서 값을 구한다. B…","fields":{"slug":"/MachineLearning/2019-05-19-BasicChapter10-3/"},"frontmatter":{"date":"May 19, 2019","title":"딥넷트웍 학습 시키기 (backpropagation)","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Basic derivative 아래의 식이 도함수의 정의 또는 순간 변화율이라고 한다. 예제 1 의 식에서 이라고 가정할 경우 의 식으로 표현할 수 있고 과 같이 값을 얻을 수 있고,\n상수 함수를 미분할 경우 0이라는 값을 얻음을 확인할 수 있다. 예제 2 …","fields":{"slug":"/MachineLearning/2019-05-17-BasicChapter10-2/"},"frontmatter":{"date":"May 17, 2019","title":"10분안에 미분 정리하기","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Neural Network를 사용해 XOR 풀기 X1 X2 XOR 0 0 0 0 1 1 1 0 1 1 1 0 하나의 Unit 위의 Unit과 같은 모양이지만 다른 weight과 bias를 갖는\n두개의 Unit에서 나온 결과(Y1, Y2) 다른 Unit에 넣어…","fields":{"slug":"/MachineLearning/2019-05-15-BasicChapter10-1/"},"frontmatter":{"date":"May 15, 2019","title":"XOR 문제 딥러닝으로 풀기","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. 1차원 Array Rank (차원) Shape (모양) Indexing & Slicing 2차원 Array Rank (차원) Shape (모양) Shape, Rank, Axis Shape (모양) Rank (차원, 대괄호의 갯수) Axis (축) Rank =…","fields":{"slug":"/MachineLearning/2019-05-13-BasicChapter9-3/"},"frontmatter":{"date":"May 13, 2019","title":"Lab:Tensor Manipulation","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. CIFAR Canadian Institute For Advanced Research 아무도 Neural Network에 관심이 없을 때 지원을 해준 단체 많은 딥러닝 엔지니어가 캐나다 출신인 이유 Breakthrough Hinton and Bengio (20…","fields":{"slug":"/MachineLearning/2019-05-12-BasicChapter9-2/"},"frontmatter":{"date":"May 12, 2019","title":"Back-propagation 과 2006/2007 ‘딥’의 출현","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Ultimate Dream 생각하는 기계를 만드는 것 사람의 뇌를 공부하기 시작했다.\n사람의 뇌는 복잡하게 구성되어 있지만 단순하게 동작한다.\n어떠한 input이 존재하고 이것의 길이에 \n따라 신호의 양이 달라진다.  \n이 더해진 값이 어떠한 값 이상이 되면…","fields":{"slug":"/MachineLearning/2019-05-12-BasicChapter9-1/"},"frontmatter":{"date":"May 12, 2019","title":"딥러닝의 시작과 XOR 문제","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. MNIST Dataset 손으로 숫자를 글씨 정보를 갖고있는 데이터 셋\n우체국에서 손으로 작성한 글씨를 판별하기 위해 만든 데이터 셋 28 X 28 X I image 데이터 셋으로\n784(28 * 28)개의 X데이터를 갖고 Y데이터는 0 ~ 9 사이의 숫자를…","fields":{"slug":"/MachineLearning/2019-05-04-BasicChapter8-4/"},"frontmatter":{"date":"May 04, 2019","title":"lab:Meet MNIST Dataset","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Training and Test data sets Data Set을 Training Set과 Test Set으로 나누어 진행 이러한 상황에서 가 유용하다.\n를 이용해서 어떠한 값이 들어올 때\nTraiining Set을 에 넣어서 학습시키고\nTest Set을 …","fields":{"slug":"/MachineLearning/2019-05-02-BasicChapter8-3/"},"frontmatter":{"date":"May 02, 2019","title":"lab:training/test dataset, learning rate, normalization","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. 모델의 성능 평가 다음과 같은 트레이닝 셋(Training Set)이 있다고 가정한다. Size Price 2104 400 1600 330 2400 369 1416 232 3000 540 1985 300 1534 315 1427 199 1380 212 149…","fields":{"slug":"/MachineLearning/2019-05-01-BasicChapter8-2/"},"frontmatter":{"date":"May 01, 2019","title":"Training/Testing 데이타 셋","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Learning rate 조절 Learning rate가 클 경우 cost가 줄어들지 않고 그래프 밖으로 값이 튀어 나갈 수 있어\n학습이 이루어지지 않을 수 있다.\n이 현상을 Overshooting이라고 한다. Learning rate가 작을 경우 cost가…","fields":{"slug":"/MachineLearning/2019-04-30-BasicChapter8-1/"},"frontmatter":{"date":"April 30, 2019","title":"학습 rate, Overfitting, 그리고 일반화 (Regularization)","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"본 게시물은 SoftWare Mastro 과정 10기 선발 과정\n후기를 주관적으로 작성한 게시물입니다. 아직도 결과를 믿을 수 없다.\n나에게 맞는 자리인지 싶기도 하고 지금까지\n열심히 살아온 것에 대한 보상인가 싶기도 하고\n앞으로 더 열섬히 살아가라는 뜻인 것 같기도 하다. 잡담은 여기까지 하는 것으로 하고 진짜 후기를 작성해보겠습니다. 1. 서류 전형 …","fields":{"slug":"/Retrospective/2019-04-19-SWMastro/"},"frontmatter":{"date":"April 19, 2019","title":"SW 마에스트로 10기 합격 후기","category":"Retrospective","draft":false}}},{"node":{"excerpt":"동전 0 시간 제한 메모리 제한 1초 256MB 문제 준규가 가지고 있는 동전은 총 N종류이고, 각각의 동전을 매우 많이 가지고 있다.\n동전을 적절히 사용해서 그 가치의 합을 K로 만들려고 한다.\n이때 필요한 동전 개수의 최솟값을 구하는 프로그램을 작성하시오. 입력 첫째 줄에 N과 K가 주어진다. (1 ≤ N ≤ 10, 1 ≤ K ≤ 100,000,000…","fields":{"slug":"/Algorithms/2019-03-22-BOJ-Coin/"},"frontmatter":{"date":"March 22, 2019","title":"BOJ 11047 동전 0","category":"Algorithms","draft":false}}},{"node":{"excerpt":"문제 1~N 까지 있는 정수 배열에 원소 하나가 없어졌습니다.\n없어진 원소의 값을 구하시오. Given an integer array of 1~N except one number,\nfind the missing integer. 입력 이 문제는 입력 값이 없습니다. 출력 풀이 간단하게 문제를 해결할 수 있었다.\n1 ~ N까지가 저장되어 있는 배열에서\n정수가…","fields":{"slug":"/Algorithms/2019-03-21-Finid-Missing-Integer/"},"frontmatter":{"date":"March 21, 2019","title":"1부터 N까지의 배열에서 사라진 정수 찾기","category":"Algorithms","draft":false}}},{"node":{"excerpt":"문제 주어진 정수가 4의 거듭제곱인지 확인하시오. Given an integer, check if it is a power of 4. 입력 음수가 아닌 양의 정수 출력 4의 거듭제곱 수 일 경우 4의 거듭제곱이 아닐 경우 실패한 풀이 처음에는 비트 연산자를 활용해 문자를 해결해 보려고 했다.\n하지만, 문제를 모두 해결한 줄 알았을 때 예외 사항을 발견해 …","fields":{"slug":"/Algorithms/2019-03-13-Check-Power-Of-Four/"},"frontmatter":{"date":"March 13, 2019","title":"주어진 수가 4의 거듭제곱인지 확인하기","category":"Algorithms","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Animal classification 동물의 특징에 따라 동물이 어떤 종인지 예측 Load data file tf.one_hot and reshape 의 데이터가 one hot과정을 거치게 되면 한 차원들\n더해 의 데이터가 된다.\n기존의 데이터가 2차원일 …","fields":{"slug":"/MachineLearning/2019-02-28-BasicChapter7-4/"},"frontmatter":{"date":"February 28, 2019","title":"lab:TensorFlow로 Fancy Softmax Classification의 구현하기","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Softmax function 개의 값을 예측할 때 사용\n점수 -> Softmax function(점수)  확률\n를 One Hot Encoding형식으로 사용","fields":{"slug":"/MachineLearning/2019-02-27-BasicChapter7-3/"},"frontmatter":{"date":"February 27, 2019","title":"lab:TensorFlow로 Softmax Classification의 구현하기","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Sigmoid? 에서 사이의 값을 필요로 하다. SoftMax SoftMax을 이용하여 수치를 에서 사이의 값으로 변환하고\nOne Hot Encoding을 이용하여 마지막 확률을 예측 Cost Function Cross - Entropy를 사용 Logisti…","fields":{"slug":"/MachineLearning/2019-02-24-BasicChapter7-2/"},"frontmatter":{"date":"February 24, 2019","title":"Cost 함수 소개","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Multinomial classificcation Training Data x1 (hours) x2 (attendance) y (grade) 10 5 A 9 5 A 3 2 B 2 4 B 11 1 C , 의 데이터로 를 예측 가 들어갔을 때 해당 데이터가 무슨…","fields":{"slug":"/MachineLearning/2019-02-01-BasicChapter7-1/"},"frontmatter":{"date":"February 01, 2019","title":"Multinomial 개념 소개","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Logistic Regression Training Data 의 값은 0 또는 1의 Binary 값 Hypothesis 의 은 들어오는 데이터 개수, 나가는 데이터 개수\n의 은 나가는 데이터 개수 Cost Function Optimizing with Grad…","fields":{"slug":"/MachineLearning/2019-01-30-BasicChapter6-3/"},"frontmatter":{"date":"January 30, 2019","title":"TensorFlow로 Logistic Classification 구현하기","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"이 POST의 모든 마크다운과 실습 코드는\n여기에서 확인할 수 있습니다. Hello World 실습 1. 가상 환경을 켜고 시작 2. 프로젝트 생성 Result\n의 폴더 생성 3. 프로젝트 경로 이동 4. Django 서버 구동 Result\nhttp://127.0.0.1:8000/ 와 같은 local주소 확인 가능 서버 종료 :  + \ndb.sqlite3…","fields":{"slug":"/Django/2019-01-26-Django-Post-2/"},"frontmatter":{"date":"January 26, 2019","title":"Django Hello World 실습 및 MTV 패턴","category":"Django","draft":false}}},{"node":{"excerpt":"이 POST의 모든 마크다운과 실습 코드는\n여기에서 확인할 수 있습니다. 기본환경 셋팅 사전작업  설치하기 작업 디렉토리 만들기  설치 확인하기 VENV 생성 & 가상환경 실행 가상환경 실행하기 강의에서는 폴더의 파일을 실행하라고 하였으나\n본인의 경우에 폴더가 존재하지 않고 폴더에 파일 존재\n명령어 대신 을 입력해도 된다, 가상환경 종료하기 Django …","fields":{"slug":"/Django/2019-01-25-Django-Post-1/"},"frontmatter":{"date":"January 25, 2019","title":"Django 기본환경 셋팅 및 Hello World 이론","category":"Django","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Cost function 목표는 global minimum을 찾는 것\n하나의 local에서 기울기가 변하지 않는 구간을 최솟값으로 잘못 인지 가능\n기존의 Linear Regression의 Cost function 사용 불가 New cost function f…","fields":{"slug":"/MachineLearning/2019-01-09-BasicChapter6-2/"},"frontmatter":{"date":"January 09, 2019","title":"Logistic Regression의 cost 함수 설명","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Classification Binary 예시 스팸 메일 탐지 패이스북 피드 신용카드 부정 거래 감지 0, 1 encoding 스팸 메일 탐지 스팸(1) or 햄(0) 페이스북 피드 보이기(1) or 숨기기(0) 신용카드 부정 거래 감지 정당(0) or 부정(…","fields":{"slug":"/MachineLearning/2019-01-08-BasicChapter6-1/"},"frontmatter":{"date":"January 08, 2019","title":"Logistic Classification의 가설 함수 정의","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Slicing Indexing, Slicing, Iterating Arrays can be indexted, sliced, iterated much like lists\nand other sequence types in Python As with Python …","fields":{"slug":"/MachineLearning/2019-01-07-BasicChapter5-3/"},"frontmatter":{"date":"January 07, 2019","title":"lab:TensorFlow로 파일에서 데이타 읽어오기","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Predicting exam score Regression using three inputs(x1, x2, x3) multi-variable/feature x1 (quiz1) x2 (quiz2) x3 (midterm 1) Y (final) 73 80 75 1…","fields":{"slug":"/MachineLearning/2019-01-05-BasicChapter5_1/"},"frontmatter":{"date":"January 05, 2019","title":"multi-variable linear regression","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Hypothesis using matrix x1 x2 x3 Y 73 80 75 152 93 88 93 185 89 91 90 180 96 98 100 196 73 66 70 142 변수 3개(x1, x2, x3)을 이용하여 (결과)를 예측 Matrix","fields":{"slug":"/MachineLearning/2019-01-05-BasicChapter5_2/"},"frontmatter":{"date":"January 05, 2019","title":"lab:multi-variable linear regression을 TensorFlow에서 구현하기","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Simplified hypothesis Gradient descent Output when W = 5 경사하강법이 잘 되는지 테스트 오른쪽에서 하강 Output when W = -3 경사하강법이 잘 되는지 테스트 왼쪽에서 하강 Optional : comput…","fields":{"slug":"/MachineLearning/2019-01-04-BasicChapter4_2/"},"frontmatter":{"date":"January 04, 2019","title":"Linear Regression 의 cost 최소화의 TensorFlow 구현","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Hypothesis and Cost Simplified hypothesis What cost(W) looks like? X Y 1 1 2 2 3 3 W = 1, cost(W) = ? W = 0, cost(W) = 4.67 W = 2, cost(W) = 4.6…","fields":{"slug":"/MachineLearning/2019-01-02-BasicChapter4_1/"},"frontmatter":{"date":"January 02, 2019","title":"Linear Regression의 cost 최소화 알고리즘의 원리","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. Hypothesis and Cost function Hypothesis 주어진 값에 대하여 어떻게 값을 예측할 것인가 Cost function 값을 얼마나 잘 예측했는지 나타나는 것 을 가장 작게 만드는 것이 학습 1. Build graph using TF …","fields":{"slug":"/MachineLearning/2018-12-31-BasicChapter3_2/"},"frontmatter":{"date":"December 31, 2018","title":"Tensorflow로 간단한 linear regression을 구현","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. 예시) 시험 점수의 예측 : Regression x(hours) y(score) 10 90 9 80 3 50 2 30 다음과 같은 트레이닝 데이터를 가지고 학습\n시간 값을 넣어 0점 ~ 100점 사이의 점수 예측 Regression (data) x : 예측을…","fields":{"slug":"/MachineLearning/2018-12-30-BasicChapter3_1/"},"frontmatter":{"date":"December 30, 2018","title":"Linear Regression의 Hypothesis 와 cost","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. TensorFlow란 Data flow graphs를 사용해서 numerical 계산을 할 수 있는 라이브러리 Python으로 구현 가능 Data Flow Graph란 하나의 노드는 연산자로 구성 간선은 데이터 배열(tensors)로 구성 TensorFlow…","fields":{"slug":"/MachineLearning/2018-12-29-BasicChapter2_2/"},"frontmatter":{"date":"December 29, 2018","title":"TensorFlow의 설치및 기본적인 operations (new)","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"해당 게시물은 Edwith에서 제공하는\n머신러닝과 딥러닝 BASIC을 듣고 요약 정리한 글입니다. 머신러닝이란 무엇인가? 일종의 소프트웨어 Limitations of explicit programming Spam filter : many rules Automatic driving : too many rules 개발자가 일일이 정하지 않고 프로그램 자체 학…","fields":{"slug":"/MachineLearning/2018-12-27-BasicChapter2_1/"},"frontmatter":{"date":"December 27, 2018","title":"기본적인 Machine Learning의 용어와 개념 설명","category":"Machine Learning","draft":false}}},{"node":{"excerpt":"수열 정렬 시간 제한 메모리 제한 2초 128MB 문제 P0, P1, …, PN-1은 0부터 N-1까지(포함)의 수를 한 번씩 포함하고 있는 수열이다.\n수열 P를 길이가 N인 배열 A에 적용하면 길이가 N인 배열 B가 된다. \n적용하는 방법은 B[Pi] = Ai이다.\n배열 A가 주어졌을 때, 수열 P를 적용한 결과가 비내림차순이 되는 수열을 찾는 프로그램…","fields":{"slug":"/Algorithms/2018-12-22-BOJ-수열정렬/"},"frontmatter":{"date":"December 22, 2018","title":"BOJ 1015 수열 정렬","category":"Algorithms","draft":false}}},{"node":{"excerpt":"제곱ㄴㄴ수 시간 제한 메모리 제한 2초 512MB 문제 어떤 수 X가 1보다 큰 제곱수로 나누어 떨어지지 않을 때, 제곱ㄴㄴ수라고 한다.\n제곱수는 정수의 제곱이다. min과 max가 주어지면,\nmin과 max를 포함한 사이에 제곱ㄴㄴ수가 몇 개 있는지 출력한다. 입력 첫째 줄에 min과 max가 주어진다.\nmin은 1보다 크거나 같고, 1,000,000,…","fields":{"slug":"/Algorithms/2018-12-17-BOJ-제곱ㄴㄴ수/"},"frontmatter":{"date":"December 17, 2018","title":"BOJ 1016 제곱ㄴㄴ수","category":"Algorithms","draft":false}}},{"node":{"excerpt":"완전제곱수 시간 제한 메모리 제한 2초 128MB 문제 M과 N이 주어질 때 M이상 N이하의 자연수 중 완전제곱수인 것을 모두 골라\n그 합을 구하고 그 중 최솟값을 찾는 프로그램을 작성하시오.\n예를 들어 M=60, N=100인 경우 60이상 100이하의 자연수 중 완전제곱수는\n64, 81, 100 이렇게 총 3개가 있으므로 그 합은 245가 되고 이 중 …","fields":{"slug":"/Algorithms/2018-12-11-BOJ-완전제곱수/"},"frontmatter":{"date":"December 11, 2018","title":"BOJ 1977 완전제곱수","category":"Algorithms","draft":false}}},{"node":{"excerpt":"Z 시간 제한 메모리 제한 2초 512MB 문제 한수는 2차원 배열 (항상 2^N * 2^N 크기이다)을 Z모양으로 탐색하려고 한다.\n예를 들어, 2*2배열을 왼쪽 위칸, 오른쪽 위칸, 왼쪽 아래칸,\n오른쪽 아래칸 순서대로 방문하면 Z모양이다. 만약, 2차원 배열의 크기가 2^N _ 2^N라서 왼쪽 위에 있는 칸이 하나가 아니라면,\n배열을 4등분 한 후에…","fields":{"slug":"/Algorithms/2018-12-09-BOJ-Z/"},"frontmatter":{"date":"December 09, 2018","title":"BOJ 1074 Z","category":"Algorithms","draft":false}}},{"node":{"excerpt":"명령 프롬프트 시간 제한 메모리 제한 2초 128MB 문제 시작 -> 실행 -> cmd를 쳐보자. 검정 화면이 눈에 보인다.\n여기서 dir이라고 치면 그 디렉토리에 있는 서브디렉토리와 파일이 모두 나온다.\n이때 원하는 파일을 찾으려면 다음과 같이 하면 된다.\ndir *.exe라고 치면 확장자가 exe인 파일이 다 나온다.\n“dir 패턴”과 같이 치면 그 …","fields":{"slug":"/Algorithms/2018-12-06-BOJ-명령-프롬프트/"},"frontmatter":{"date":"December 06, 2018","title":"BOJ 1032 명령 프롬프트","category":"Algorithms","draft":false}}},{"node":{"excerpt":"트리의 순회 시간 제한 메모리 제한 5초 128MB 문제 n개의 정점을 갖는 이진 트리의 정점에 1부터 n까지의 번호가 중복 없이 매겨져 있다.\n이와 같은 이진 트리의 인오더와 포스트오더가 주어졌을 때,\n프리오더를 구하는 프로그램을 작성하시오. 입력 첫째 줄에 n(1 ≤ n ≤ 100,000)이 주어진다.\n다음 줄에는 인오더를 나타내는 n개의 자연수가 주…","fields":{"slug":"/Algorithms/2018-12-05-BOJ-트리의-순회/"},"frontmatter":{"date":"December 05, 2018","title":"BOJ 2263 트리의 순회","category":"Algorithms","draft":false}}},{"node":{"excerpt":"1. 개발을 접한지 1년 + @ 처음 개발을 시작할 때만 하더라도 비전공자 였지만\n현재 전공자로서 공부하고 개발을 진행중. 2. Github github.com/alstn2468 처음엔 Github Page를 이용하려 사용하기 시작\n2018년 11월 17일 2000커밋을 달성\n공부한 것들을 하나 둘 올리려고 노력 중 3. 순천향대 봇 플러스 친구 링크 친…","fields":{"slug":"/Retrospective/2018-12-04-2018년-개발-회고/"},"frontmatter":{"date":"December 04, 2018","title":"2018년 개발 회고","category":"Retrospective","draft":false}}}]}},"pageContext":{}},"staticQueryHashes":["3001444076","3128451518"]}