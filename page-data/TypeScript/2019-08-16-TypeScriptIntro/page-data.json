{"componentChunkName":"component---src-templates-blog-post-js","path":"/TypeScript/2019-08-16-TypeScriptIntro","result":{"data":{"site":{"siteMetadata":{"title":"Minsu's Dev Log","author":"Minsu Kim","siteUrl":"https://alstn2468.github.io","comment":{"disqusShortName":"","utterances":"alstn2468/alstn2468.github.io"},"sponsor":{"buyMeACoffeeId":"eMLdEwU"}}},"markdownRemark":{"id":"83abd50c-8953-525a-9044-7c60e7b85c54","excerpt":"자바스크립트 대체 언어의 하나로써 자바스크립트의 상위확장이다.\nTypeScript는 Microsoft에서 2012년 발표한 오픈소스로\n정적 타이핑을 지원하며 ES6의 클래스, 모듈 등과 ES7의 Decorator 등을 지원 JavaScript와 차이 JavaScript 위와 같은 라는 변수를 선언할 때 JavaScript는\n동적으로 변수의 Type을 추론한다. 아래와 같이 다른 Type의 값을 넣었을 때 JavaScript에서는 잘 작동한다. 하지만 TypeScript…","html":"<p><strong>자바스크립트 대체 언어</strong>의 하나로써 <strong>자바스크립트의 상위확장</strong>이다.<br/>\n<strong>TypeScript</strong>는 Microsoft에서 2012년 발표한 <strong>오픈소스</strong>로<br/>\n<strong>정적 타이핑</strong>을 지원하며 ES6의 클래스, 모듈 등과 ES7의 Decorator 등을 지원<br/></p>\n<h2 id=\"javascript와-차이\" style=\"position:relative;\"><a href=\"#javascript%EC%99%80-%EC%B0%A8%EC%9D%B4\" aria-label=\"javascript와 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScript와 차이</h2>\n<h3 id=\"javascript\" style=\"position:relative;\"><a href=\"#javascript\" aria-label=\"javascript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScript</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> hello <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> hello<span class=\"token punctuation\">)</span> <span class=\"token comment\">// string</span></code></pre></div>\n<p>위와 같은 <code class=\"language-text\">hello</code>라는 변수를 선언할 때 <strong>JavaScript</strong>는<br/>\n<strong>동적</strong>으로 변수의 <strong>Type</strong>을 추론한다.<br/></p>\n<p>아래와 같이 다른 <strong>Type</strong>의 값을 넣었을 때 <strong>JavaScript</strong>에서는 잘 작동한다.<br/></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">hello <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> hello<span class=\"token punctuation\">)</span> <span class=\"token comment\">// number</span></code></pre></div>\n<p>하지만 <strong>TypeScript</strong>에서는 아래와 같이 변수 선언을 할때<br/>\n<strong>정적</strong>으로 타입을 지정해 사용할 수 있다.<br/></p>\n<h3 id=\"typescript\" style=\"position:relative;\"><a href=\"#typescript\" aria-label=\"typescript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TypeScript</h3>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">let</span> hello<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> hello<span class=\"token punctuation\">)</span> <span class=\"token comment\">// string</span></code></pre></div>\n<p><strong>JavaScript</strong>에서 사용했던 것과 같이 변수에 다른 타입 데이터를<br/>\n저장하려고 하면 오류가 발생한다.<br/></p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// hello = 4; 사용 불가</span></code></pre></div>\n<p>이는 해당 변수를 사용할 때 사용자가 입력한 값이 유효한지 검사할 때<br>\n변수의 <strong>Type</strong>이 맞는지 검사하는 조건문을 줄여줄 수 있게된다.<br/></p>\n<h2 id=\"함수에서의-typescript\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%EC%97%90%EC%84%9C%EC%9D%98-typescript\" aria-label=\"함수에서의 typescript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수에서의 TypeScript</h2>\n<p>아래와 같이 함수의 <strong>Parameter</strong>의 타입을 정할 수 있다.<br/>\n지정한 <strong>Type</strong>과 다른 <strong>Type</strong>의 값이 들어온다면 실행되지 않을 것이다.<br/></p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">plus</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">+</span> b\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">plus</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 3</span>\n\n<span class=\"token comment\">// console.log(plus(\"NotWork\", 2));</span></code></pre></div>\n<p>또한 <strong>반환값</strong>의 <strong>Type</strong>도 지정할 수 있다.<br/></p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> greet <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> you are </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> years old</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Minsu'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Hello Minsu you are 21 years old</span></code></pre></div>\n<p>위의 함수는 <strong>Parameter</strong>로 <code class=\"language-text\">string</code>하나와 <code class=\"language-text\">number</code>하나를 받고<br/>\n<code class=\"language-text\">string</code>을 반환하도록 명시되어있는 함수다.<br/></p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// const greet = (name: string, age: number): string => {</span>\n<span class=\"token comment\">//   console.log(`Hello ${name} you are ${age} years old`);</span>\n<span class=\"token comment\">// };</span></code></pre></div>\n<p>이전의 함수를 <code class=\"language-text\">string</code>을 반환하지 않고 위와 같이 사용한다면 에러가 발생한다.<br/>\n<strong>TypeScript</strong>의 <strong>정적 타이핑</strong>은 개발자들이 쉽게 할 수 있는 실수를 줄여줄 것이다.</p>","frontmatter":{"title":"TypeScript란?","date":"August 16, 2019","thumbnail":null}}},"pageContext":{"slug":"/TypeScript/2019-08-16-TypeScriptIntro/","previous":{"fields":{"slug":"/MachineLearning/2019-07-20-BasicChapter12-5/"},"frontmatter":{"title":"ConvNet을 TensorFlow로 구현하자 (MNIST)","category":"Machine Learning","draft":false}},"next":{"fields":{"slug":"/ReactNative/2019-08-30-ReactNativeCameraPermissions/"},"frontmatter":{"title":"React Native로 카메라 사용하기 (1)","category":"React Native","draft":false}}}},"staticQueryHashes":["3001444076","3128451518"]}