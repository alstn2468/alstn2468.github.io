---
title:  "BOJ 1977 완전제곱수"
date:   2018-12-11 01:41:23
categories: [Algorithms]
tags: [Algorithms, BOJ, Python]
comments: true
---

### [완전제곱수](https://www.acmicpc.net/problem/1977)

| 시간 제한 | 메모리 제한 |
| --------- | ----------- |
|    2초    |    128MB    |

#### 문제
M과 N이 주어질 때 M이상 N이하의 자연수 중 완전제곱수인 것을 모두 골라<br/>
그 합을 구하고 그 중 최솟값을 찾는 프로그램을 작성하시오.<br/>
예를 들어 M=60, N=100인 경우 60이상 100이하의 자연수 중 완전제곱수는<br/>
64,  81,  100 이렇게 총 3개가 있으므로 그 합은 245가 되고 이 중 최솟값은 64가 된다.<br/>

#### 입력
첫째 줄에 M이, 둘째 줄에 N이 주어진다.<br/>
M과 N은 10000이하의 자연수이며 M은 N보다 같거나 작다.<br/>

#### 출력
M이상 N이하의 자연수 중 완전제곱수인 것을 모두 찾아<br/>
첫째 줄에 그 합을, 둘째 줄에 그 중 최솟값을 출력한다.<br/>
단, M이상 N이하의 자연수 중 완전제곱수가 없을 경우는 첫째 줄에 -1을 출력한다.<br/>

#### 예제 입력

```python
60
100
```

#### 예제 출력

```python
245
64
```

- - -

### 풀이

#### 코드 구현부

Pythonic Code
```python
from math import sqrt

perf_squ_num = list(filter(lambda x: sqrt(x).is_integer(),
                           [i for i in range(int(input()), int(input()) + 1)]))

print(-1) if len(perf_squ_num) == 0 else print(str(sum(perf_squ_num)) \
                                               + "\n" + str(min(perf_squ_num)))
```

A Readable Code
```python
from math import sqrt

M = int(input())
N = int(input())

perf_squ_num = []

for i in range(M, N+1):
    if sqrt(i).is_integer():
        perf_squ_num.append(i)

if len(perf_squ_num) == 0:
    print(-1)

else:
    print(sum(perf_squ_num))
    print(min(perf_squ_num))
```

<br/>

#### 결과
<img src="/assets/2018-12-11-1977/2.PNG" width="500" height="auto">

<img src="/assets/2018-12-11-1977/3.PNG" width="500" height="auto">

숏코딩 **53위**!!<br/>

&#9989; 코드는 [[여기]](https://github.com/alstn2468/BaekJoon_Online_Judge/blob/master/1900~1999/1977.py)에서 확인할 수 있다.
